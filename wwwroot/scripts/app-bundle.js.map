{"version":3,"sources":["environment.ts","config/settings.ts","services/state.ts","model/serviceError.ts","model/attendee.ts","model/message.ts","model/conversation.ts","services/helpers.ts","model/user.ts","events/connectionStateChanged.ts","events/conversationJoined.ts","events/messageReceived.ts","events/userConnected.ts","events/userDisconnected.ts","services/chat.service.ts","services/login.service.ts","app.ts","main.ts","services/user.service.ts","components/contact-list.ts","events/conversationSelected.ts","services/conversation.service.ts","components/contact.ts","components/conversation-component.ts","components/conversation-list.ts","components/conversation-preview.ts","components/user-name.ts","model/changePassword.ts","services/account.service.ts","pages/account.ts","pages/confirm.ts","pages/home.ts","pages/login.ts","resources/index.ts","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validate-binding-behavior.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validation-controller.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validator.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validate-trigger.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/property-info.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validation-error.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validation-controller-factory.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validation-errors-custom-attribute.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validation-renderer-custom-attribute.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/rules.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/standard-validator.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/validation-messages.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/validation-parser.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/util.js","/Users/olivierlefebvre/Documents/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/validation-rules.js","/Users/olivierlefebvre/Documents/chatle.aurelia/src/app.html","/Users/olivierlefebvre/Documents/chatle.aurelia/src/css/site.css","/Users/olivierlefebvre/Documents/chatle.aurelia/src/components/contact-list.html","/Users/olivierlefebvre/Documents/chatle.aurelia/src/css/site.min.css","/Users/olivierlefebvre/Documents/chatle.aurelia/src/components/contact.html","/Users/olivierlefebvre/Documents/chatle.aurelia/src/components/conversation-component.html","/Users/olivierlefebvre/Documents/chatle.aurelia/src/components/conversation-list.html","/Users/olivierlefebvre/Documents/chatle.aurelia/src/components/conversation-preview.html","/Users/olivierlefebvre/Documents/chatle.aurelia/src/components/user-name.html","/Users/olivierlefebvre/Documents/chatle.aurelia/src/pages/account.html","/Users/olivierlefebvre/Documents/chatle.aurelia/src/pages/confirm.html","/Users/olivierlefebvre/Documents/chatle.aurelia/src/pages/home.html","/Users/olivierlefebvre/Documents/chatle.aurelia/src/pages/login.html"],"names":[],"mappings":";;IAAA;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,uBAAuB;KACpC,CAAC;;;;;ICJF;QAAA;YACI,eAAU,GAAG,uBAAuB,CAAC;YACrC,YAAO,GAAG,YAAY,CAAC;YACvB,YAAO,GAAG,gBAAgB,CAAC;YAC3B,YAAO,GAAG,WAAW,CAAC;YACtB,gBAAW,GAAG,UAAU,CAAC;QAC7B,CAAC;QAAD,eAAC;IAAD,CANA,AAMC,IAAA;IANY,gBAAQ,WAMpB,CAAA;;;;;ICHD;QAAA;QAGA,CAAC;QAAD,YAAC;IAAD,CAHA,AAGC,IAAA;IAHY,aAAK,QAGjB,CAAA;;;;;ICND;QAAA;QAEA,CAAC;QAAD,UAAC;IAAD,CAFA,AAEC,IAAA;IAED;QAAA;QAEA,CAAC;QAAD,mBAAC;IAAD,CAFA,AAEC,IAAA;IAED;QAAA;QAIA,CAAC;QAAD,mBAAC;IAAD,CAJA,AAIC,IAAA;IAJY,oBAAY,eAIxB,CAAA;;;;;ICZD;QACI,kBAAmB,MAAe;YAAf,WAAM,GAAN,MAAM,CAAS;QAAI,CAAC;QAC3C,eAAC;IAAD,CAFA,AAEC,IAAA;IAFY,gBAAQ,WAEpB,CAAA;;;;;ICFD;QAAA;QAKA,CAAC;QAAD,cAAC;IAAD,CALA,AAKC,IAAA;IALY,eAAO,UAKnB,CAAA;;;;;ICFD;QAAA;QAKA,CAAC;QAAD,mBAAC;IAAD,CALA,AAKC,IAAA;IALY,oBAAY,eAKxB,CAAA;;;;;;;;;;;;;;ICAD;QAEI,iBAAoB,KAAY;YAAZ,UAAK,GAAL,KAAK,CAAO;YAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACnC,CAAC;QAEF,0BAAQ,GAAR,UAAS,KAAU;YACf,IAAI,MAAM,GAAoB,KAAK,CAAC,OAAO,CAAC;YAC5C,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;YAC7C,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC;YAChB,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QAEA,qCAAmB,GAAnB,UAAoB,YAA0B;YAA9C,iBAYA;YAXG,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC;YACX,CAAC;YAED,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ;gBACnC,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACzE,KAAK,IAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC;gBACnC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QACtC,CAAC;QAED,iCAAe,GAAf,UAAgB,IAAI;YAChB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC1D,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,QAAQ,GAAG,IAAI,GAAG,WAAW,CAAC,CAAC;YACtD,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,OAAO,KAAK,IAAI,GAAG,EAAE,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QACtF,CAAC;QAlCL;YAAC,8BAAU;;mBAAA;QAmCX,cAAC;IAAD,CAlCA,AAkCC,IAAA;IAlCY,eAAO,UAkCnB,CAAA;;;;;ICxCD;QAAA;QAIA,CAAC;QAAD,WAAC;IAAD,CAJA,AAIC,IAAA;IAJY,YAAI,OAIhB,CAAA;;;;;ICJD;QACI,gCAAmB,KAAsB;YAAtB,UAAK,GAAL,KAAK,CAAiB;QAAI,CAAC;QAClD,6BAAC;IAAD,CAFA,AAEC,IAAA;IAFY,8BAAsB,yBAElC,CAAA;;;;;ICFD;QACI,4BAAmB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;QAAI,CAAC;QACtD,yBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,0BAAkB,qBAE9B,CAAA;;;;;ICFD;QACI,yBAAmB,OAAgB;YAAhB,YAAO,GAAP,OAAO,CAAS;QAAI,CAAC;QAC5C,sBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,uBAAe,kBAE3B,CAAA;;;;;ICFD;QACI,uBAAmB,IAAU;YAAV,SAAI,GAAJ,IAAI,CAAM;QAAI,CAAC;QACtC,oBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,qBAAa,gBAEzB,CAAA;;;;;ICHD;QACI,0BAAmB,IAAkB;YAAlB,SAAI,GAAJ,IAAI,CAAc;QAAI,CAAC;QAC9C,uBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,wBAAgB,mBAE5B,CAAA;;;;;;;;;;;;;;ICuCD,WAAY,eAAe;QACvB,+DAAa,CAAA;QACb,qEAAgB,CAAA;QAChB,uDAAS,CAAA;IACb,CAAC,EAJW,uBAAe,KAAf,uBAAe,QAI1B;IAJD,IAAY,eAAe,GAAf,uBAIX,CAAA;IAGD;QAII,qBAAoB,QAAkB,EAC1B,EAAmB,EACnB,IAAgB,EAChB,KAAY,EACZ,OAAgB;YAJR,aAAQ,GAAR,QAAQ,CAAU;YAC1B,OAAE,GAAF,EAAE,CAAiB;YACnB,SAAI,GAAJ,IAAI,CAAY;YAChB,UAAK,GAAL,KAAK,CAAO;YACZ,YAAO,GAAP,OAAO,CAAS;YAP5B,iBAAY,GAAG,eAAe,CAAC,YAAY,CAAC;QAOZ,CAAC;QAEjC,2BAAK,GAAL;YAAA,iBAwEC;YAtEG,IAAI,KAAK,GAAG,qBAAW,CAAC,KAAK,CAAC;YAE9B,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC;YAChC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;YACpB,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;YAEhD,IAAI,UAAU,GAAgB,MAAM,CAAC,UAAU,CAAC;YAChD,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC;YAM9B,OAAO,CAAC,MAAM,CAAC,aAAa,GAAG,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAA1B,CAA0B,CAAC;YAKlE,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAA7B,CAA6B,CAAC;YAMxE,OAAO,CAAC,MAAM,CAAC,eAAe,GAAG,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAA/B,CAA+B,CAAC;YAK5E,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,UAAA,YAAY,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAArC,CAAqC,CAAC;YAExF,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAER,GAAG,CAAC,YAAY,CAAC,UAAA,MAAM;oBACnB,IAAI,QAAgB,EAChB,QAAgB,CAAC;oBAErB,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;oBAC7B,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;wBACxC,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACrD,QAAQ,GAAG,KAAK,CAAC;wBACrB,CAAC;wBACD,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACrD,QAAQ,GAAG,KAAK,CAAC;wBACrB,CAAC;oBACL,CAAC;oBAED,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAQ,CAAC,CAAC;gBAC/E,CAAC,CAAC,CAAC;YACP,CAAC;YAGD,GAAG,CAAC,WAAW,CAAC,cAAM,OAAA,KAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,CAAC,CAAC;YAE5C,GAAG,CAAC,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAnB,CAAmB,CAAE,CAAC;YAEzC,GAAG,CAAC,YAAY,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC,CAAC;YAG9C,MAAM,CAAC,IAAI,OAAO,CAAkB,UAAC,OAAO,EAAE,MAAM;gBAChD,GAAG,CAAC,KAAK,EAAE;qBACN,IAAI,CAAC;oBACF,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;oBACnD,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;gBACvC,CAAC,CAAC;qBACD,IAAI,CAAC,UAAA,KAAK;oBACP,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA;oBAC9C,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC;QAED,0BAAI,GAAJ;YACI,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QACjC,CAAC;QAEO,wCAAkB,GAA1B,UAA2B,eAAgC;YACvD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,eAAe,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC;YACX,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,eAAe,CAAC,CAAC;YAC/D,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;YACpC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,+CAAsB,CAAC,eAAe,CAAC,CAAC,CAAC;QACjE,CAAC;QAEO,mCAAa,GAArB;YACI,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QACvD,CAAC;QAEO,oCAAc,GAAtB;YACI,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAC1D,CAAC;QAEO,6BAAO,GAAf,UAAgB,KAAU;YACtB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACnD,CAAC;QAEO,qCAAe,GAAvB,UAAwB,IAAU;YAC9B,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YACvD,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,6BAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,CAAC;QAEO,wCAAkB,GAA1B,UAA2B,IAAkB;YACzC,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YACtD,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,mCAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;YAChD,CAAC;QACL,CAAC;QAEO,uCAAiB,GAAzB,UAA0B,OAAgB;YACtC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,iCAAe,CAAC,OAAO,CAAC,CAAC,CAAC;QAClD,CAAC;QAEO,wCAAkB,GAA1B,UAA2B,YAA0B;YACjD,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,uCAAkB,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1D,CAAC;QAlIL;YAAC,8BAAU;;uBAAA;QAmIX,kBAAC;IAAD,CAlIA,AAkIC,IAAA;IAlIY,mBAAW,cAkIvB,CAAA;;;;;;;;;;;;;;IC1KD;QAEI,sBAAoB,IAAgB,EACxB,QAAkB,EAClB,WAAwB,EACxB,KAAY,EACZ,OAAgB;YAJR,SAAI,GAAJ,IAAI,CAAY;YACxB,aAAQ,GAAR,QAAQ,CAAU;YAClB,gBAAW,GAAX,WAAW,CAAa;YACxB,UAAK,GAAL,KAAK,CAAO;YACZ,YAAO,GAAP,OAAO,CAAS;QAAI,CAAC;QAEjC,8BAAO,GAAP,UAAQ,YAAsB;YAA9B,iBAYC;YAXG,MAAM,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;gBACvC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBACf,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;yBACf,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,EAA7B,CAA6B,CAAC;yBACzC,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;gBAC9D,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACnB,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBAClC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,4BAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;YAAxC,iBAcC;YAbG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,QAAQ,CAAC;YAE/B,MAAM,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;gBACvC,KAAI,CAAC,OAAO,EAAE;qBACT,IAAI,CAAC,UAAA,CAAC;oBACH,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;wBACrB,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;oBACjD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;oBAChE,CAAC;gBACL,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;QACP,CAAC;QAED,6BAAM,GAAN;YAAA,iBAUC;YATG,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC3B,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YACtC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,EAAE;iBACT,IAAI,CAAC,UAAA,CAAC;gBACH,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;YAEP,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;QAED,6BAAM,GAAN,UAAO,QAAQ;YAAf,iBAYC;YAXG,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;gBACxC,KAAI,CAAC,OAAO,EAAE;qBACT,IAAI,CAAC,UAAA,CAAC;oBACH,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,mBAAmB,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;yBACxF,IAAI,CAAC,UAAA,QAAQ;wBACV,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBAC9B,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;gBAClE,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QAED,8BAAO,GAAP,UAAQ,QAAQ;YAAhB,iBAYC;YAXG,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;gBACxC,KAAI,CAAC,OAAO,EAAE;qBACT,IAAI,CAAC,UAAA,CAAC;oBACH,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,+BAA+B,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;yBAC7F,IAAI,CAAC,UAAA,QAAQ;wBACV,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;oBAC3C,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC;gBAC9D,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,8BAAO,GAAf,UAAgB,OAAiB,EAAE,MAAgB;YAAnD,iBAUC;YATG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;iBAChB,IAAI,CAAC,UAAA,CAAC;gBACH,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAA;gBACtB,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAA,OAAO;oBACvB,OAAO,CAAC,UAAU,CAAC,cAAc,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;gBAClD,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;QAClE,CAAC;QAEO,mCAAY,GAApB,UAAqB,QAAQ,EAAE,OAAiB,EAAE,MAAgB;YAAlE,iBAQC;YAPG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,WAAW,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;iBAC1E,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YAC3C,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,KAAK;gBACR,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;QACX,CAAC;QAEO,wCAAiB,GAAzB,UAA0B,QAAgB,EAAE,QAAgB,EAAE,OAAiB,EAAE,MAAgB;YAAjG,iBASC;YARG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,WAAW,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;iBAC9F,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;gBACvC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YACjD,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,KAAK;gBACR,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAA;QACV,CAAC;QAEO,6BAAM,GAAd,UAAe,QAAgB,EAAE,OAAiB,EAAE,MAAgB;YAChE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAEzB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAClC,CAAC;QArHL;YAAC,8BAAU;;wBAAA;QAsHX,mBAAC;IAAD,CArHA,AAqHC,IAAA;IArHY,oBAAY,eAqHxB,CAAA;;;;;;;;;;;;;;IC5GD;QAMI,aAAoB,OAAqB,EAC7B,EAAmB,EACnB,KAAY,EACpB,QAAkB,EAClB,IAAgB;YAJA,YAAO,GAAP,OAAO,CAAc;YAC7B,OAAE,GAAF,EAAE,CAAiB;YACnB,UAAK,GAAL,KAAK,CAAO;YAGpB,QAAQ,CAAC,UAAU,GAAG,qBAAW,CAAC,UAAU,CAAC;YAC7C,IAAI,CAAC,SAAS,CACV,UAAA,OAAO,IAAI,OAAA,OAAO;iBACb,WAAW,CAAC,qBAAW,CAAC,UAAU,CAAC;iBACnC,eAAe,CAAC,IAAI,CAAC,EAFf,CAEe,CAAC,CAAC;QACpC,CAAC;QAED,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACvD,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;YACxB,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;YACnD,MAAM,CAAC,GAAG,CAAC;gBACP,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE;gBAC5E,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,SAAS,EAAE;gBAClF,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE;gBAC3F,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE;aACtG,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC;QAED,sBAAQ,GAAR;YAAA,iBAKC;YAJG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,+CAAsB,EAAE,UAAA,CAAC;gBACvC,KAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC;QAED,oBAAM,GAAN;YACI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC;QAED,oBAAM,GAAN;YACI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC;QAEO,4BAAc,GAAtB;YACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC;YACpF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxC,CAAC;QAnDL;YAAC,8BAAU;;eAAA;QAqDX,UAAC;IAAD,CApDA,AAoDC,IAAA;IApDY,WAAG,MAoDf,CAAA;IAGD;QAEI,uBAAoB,KAAY,EAAU,OAAgB;YAAtC,UAAK,GAAL,KAAK,CAAO;YAAU,YAAO,GAAP,OAAO,CAAS;QAAI,CAAC;QAE/D,2BAAG,GAAH,UAAI,qBAA4C,EAAE,IAAU;YACxD,EAAE,CAAC,CAAC,qBAAqB,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,UAAA,CAAC;gBACjD,IAAI,KAAK,GAAG,CAAC,CAAC,MAA2B,CAAC;gBAC1C,MAAM,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC,CAAC;gBACD,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAA;gBAChD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACX,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,yBAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChD,CAAC;gBAED,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAA;gBAChD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACnC,CAAC;gBAED,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBACrC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACd,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,yBAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC9C,CAAC;YACL,CAAC;YAED,MAAM,CAAC,IAAI,EAAE,CAAC;QAClB,CAAC;QA3BL;YAAC,8BAAU;;yBAAA;QA4BX,oBAAC;IAAD,CA3BA,AA2BC,IAAA;;;;;IChGD,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QACpB,8BAAU,CAAC,WAAW,CAAC,IAAI,yCAAe,EAAE,CAAC,CAAC;QAC9C,8BAAU,CAAC,QAAQ,CAAC,8BAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAIK,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC;aACpB,MAAM,CAAC,oBAAoB,CAAC,CAAC;QAEhC,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAfe,iBAAS,YAexB,CAAA;;;;;;;;;;;;;;ICvBD;QAEI,qBAAoB,IAAgB,EACxB,QAAkB,EAClB,KAAY;YAFJ,SAAI,GAAJ,IAAI,CAAY;YACxB,aAAQ,GAAR,QAAQ,CAAU;YAClB,UAAK,GAAL,KAAK,CAAO;QAAI,CAAC;QAE7B,8BAAQ,GAAR;YAAA,iBAWC;YAVG,MAAM,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;gBACvC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;qBAC/B,IAAI,CAAC,UAAA,QAAQ;oBACN,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;oBAC5B,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACrB,OAAO,CAAS,IAAI,CAAC,KAAK,CAAC,CAAC;oBAChC,CAAC;gBACL,CAAC,CAAC;qBACL,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QAlBL;YAAC,8BAAU;;uBAAA;QAmBX,kBAAC;IAAD,CAlBA,AAkBC,IAAA;IAlBY,mBAAW,cAkBvB,CAAA;;;;;;;;;;;;;;ICdD;QAOI,qBAAoB,WAAwB,EAChC,WAAwB,EACxB,EAAmB;YAFX,gBAAW,GAAX,WAAW,CAAa;YAChC,gBAAW,GAAX,WAAW,CAAa;YACxB,OAAE,GAAF,EAAE,CAAiB;YAP/B,mBAAc,GAAG,YAAY,CAAC;QAOK,CAAC;QAEpC,8BAAQ,GAAR;YAAA,iBAUC;YATG,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,+CAAsB,EAAE,UAAA,CAAC;gBAChF,EAAE,CAAC,CAA0B,CAAE,CAAC,KAAK,KAAK,8BAAe,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClE,KAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,KAAK,8BAAe,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC;QACL,CAAC;QAED,8BAAQ,GAAR;YACI,IAAI,CAAC,iCAAiC,CAAC,OAAO,EAAE,CAAC;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,CAAC;YAC7C,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,CAAC;YAChD,CAAC;QACL,CAAC;QAEO,6BAAO,GAAf;YAAA,iBAeC;YAdG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;iBACtB,IAAI,CAAC,UAAA,KAAK;gBACP,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBAEnB,KAAI,CAAC,yBAAyB,GAAG,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,6BAAa,EAAE,UAAA,CAAC;oBAC/D,KAAI,CAAC,UAAU,CAAiB,CAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAC5C,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,4BAA4B,GAAG,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,mCAAgB,EAAE,UAAA,CAAC;oBACrE,KAAI,CAAC,UAAU,CAAoB,CAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,cAAc,GAAG,KAAK,EAA3B,CAA2B,CAAC,CAAC;QACrD,CAAC;QAEO,gCAAU,GAAlB,UAAmB,EAAU;YACzB,IAAI,IAAU,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;gBAChB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;oBACd,IAAI,GAAG,CAAC,CAAC;gBACb,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAChC,CAAC;QACL,CAAC;QA/DL;YAAC,8BAAU;;uBAAA;QAgEX,kBAAC;IAAD,CA/DA,AA+DC,IAAA;IA/DY,mBAAW,cA+DvB,CAAA;;;;;IC1ED;QACI,8BAAmB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;QAAI,CAAC;QACtD,2BAAC;IAAD,CAFA,AAEC,IAAA;IAFY,4BAAoB,uBAEhC,CAAA;;;;;;;;;;;;;;ICaD;QAGI,6BAAoB,IAAgB,EACxB,QAAkB,EAClB,KAAY,EACZ,OAAgB,EAChB,EAAmB;YAJX,SAAI,GAAJ,IAAI,CAAY;YACxB,aAAQ,GAAR,QAAQ,CAAU;YAClB,UAAK,GAAL,KAAK,CAAO;YACZ,YAAO,GAAP,OAAO,CAAS;YAChB,OAAE,GAAF,EAAE,CAAiB;QAAI,CAAC;QAEpC,8CAAgB,GAAhB,UAAiB,YAA0B,EAAE,MAAc;YACvD,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC;YACxC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,2CAAoB,EAAE,IAAI,2CAAoB,CAAC,YAAY,CAAC,CAAC,CAAC;YAC9E,MAAM,CAAC,eAAe,CAAC,cAAc,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;QACvE,CAAC;QAED,yCAAW,GAAX,UAAY,YAA0B,EAAE,OAAe;YAAvD,iBAyCC;YAxCG,IAAI,CAAC,GAAG,IAAI,iBAAO,EAAE,CAAC;YACtB,CAAC,CAAC,cAAc,GAAG,YAAY,CAAC,EAAE,CAAC;YACnC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC7B,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC;YAEjB,EAAE,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;oBACxC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;wBAClC,EAAE,EAAE,YAAY,CAAC,EAAE;wBACnB,IAAI,EAAE,OAAO;qBAChB,CAAC;yBACG,IAAI,CAAC,UAAA,QAAQ;wBACV,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACjC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACf,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC;gBAC9D,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,UAAkB,CAAC;gBACvB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC;oBAC5B,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnC,UAAQ,GAAG,CAAC,CAAC;oBACjB,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;oBACxC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;wBAClC,EAAE,EAAE,UAAQ,CAAC,MAAM;wBACnB,IAAI,EAAE,OAAO;qBAChB,CAAC;yBACG,IAAI,CACL,UAAA,QAAQ;wBACJ,YAAY,CAAC,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC;wBACnC,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,uCAAkB,CAAC,YAAY,CAAC,CAAC,CAAC;wBACtD,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACjC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACf,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC;gBAC9D,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QAED,8CAAgB,GAAhB;YAAA,iBAgBC;YAfG,MAAM,CAAC,IAAI,OAAO,CAAiB,UAAC,OAAO,EAAE,MAAM;gBAC/C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;qBAC/B,IAAI,CAAC,UAAA,QAAQ;oBACV,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACpB,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;wBAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;4BACP,OAAO,CAAiB,IAAI,CAAC,CAAC;4BAC9B,MAAM,CAAC;wBACX,CAAC;oBACL,CAAC;oBAED,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QA5EL;YAAC,8BAAU;;+BAAA;QA6EX,0BAAC;IAAD,CA5EA,AA4EC,IAAA;IA5EY,2BAAmB,sBA4E/B,CAAA;;;;;;;;;;;;;;IChFD;QAKI,iBAAoB,OAA4B,EACpC,KAAK,EACL,EAAmB,EACnB,MAAc;YAHN,YAAO,GAAP,OAAO,CAAqB;YACpC,UAAK,GAAL,KAAK,CAAA;YACL,OAAE,GAAF,EAAE,CAAiB;YACnB,WAAM,GAAN,MAAM,CAAQ;QAAI,CAAC;QAE/B,wBAAM,GAAN;YACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC1B,IAAI,YAAY,GAAG,IAAI,2BAAY,EAAE,CAAC;gBACtC,IAAI,SAAS,GAAG,IAAI,KAAK,EAAY,CAAC;gBACtC,IAAI,QAAQ,GAAG,IAAI,mBAAQ,EAAE,CAAC;gBAE9B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC/B,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzB,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;gBACnC,YAAY,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAW,CAAC;gBAE7C,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YAC1C,CAAC;YAED,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACvE,CAAC;QAED,0BAAQ,GAAR;YAAA,iBAcC;YAbG,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,2CAAoB,EAAE,UAAA,CAAC;gBAC7E,IAAI,IAAI,GAAG,CAAC,CAAC,YAA4B,CAAC;gBAC1C,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAE/B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxB,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC;wBACf,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,KAAK,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;4BAChE,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,CAAA;gBACN,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,0BAAQ,GAAR;YACI,IAAI,CAAC,gCAAgC,CAAC,OAAO,EAAE,CAAC;QACpD,CAAC;QA5CD;YAAC,4BAAQ;;6CAAA;QAFb;YAAC,8BAAU;;mBAAA;QA+CX,cAAC;IAAD,CA9CA,AA8CC,IAAA;IA9CY,eAAO,UA8CnB,CAAA;;;;;;;;;;;;;;ICpDD;QAII,+BAAoB,OAA4B,EAAU,MAAc;YAApD,YAAO,GAAP,OAAO,CAAqB;YAAU,WAAM,GAAN,MAAM,CAAQ;QACxE,CAAC;QAED,wCAAQ,GAAR,UAAS,MAAM,EAAE,WAAW;YACxB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACV,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;YAC5C,CAAC;YAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;YAErD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACxC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC3D,CAAC;QACL,CAAC;QAED,2CAAW,GAAX;YACI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACtB,CAAC;QA1BL;YAAC,8BAAU;;iCAAA;QA2BX,4BAAC;IAAD,CA1BA,AA0BC,IAAA;IA1BY,6BAAqB,wBA0BjC,CAAA;;;;;;;;;;;;;;ICpBD;QAME,0BAAoB,OAA4B,EACtC,KAAY,EACZ,EAAmB;YAFT,YAAO,GAAP,OAAO,CAAqB;YACtC,UAAK,GAAL,KAAK,CAAO;YACZ,OAAE,GAAF,EAAE,CAAiB;QAAI,CAAC;QAElC,mCAAQ,GAAR;YAAA,iBAeC;YAdC,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAgB,CAAC;YAE/C,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,+CAAsB,EAAE,UAAA,CAAC;gBAC5E,IAAI,KAAK,GAA4B,CAAE,CAAC,KAAK,CAAC;gBAC9C,EAAE,CAAC,CAAC,KAAK,KAAK,8BAAe,CAAC,YAAY,CAAC,CAAC,CAAC;oBAE3C,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBACvD,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,8BAAe,CAAC,SAAS,CAAC,CAAC,CAAC;oBAE/C,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,mCAAQ,GAAR;YACE,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC7C,CAAC;QAEO,sCAAW,GAAnB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,8BAA8B,CAAC,OAAO,EAAE,CAAC;YAChD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,CAAC;YAC9C,CAAC;QACH,CAAC;QAEO,2CAAgB,GAAxB;YAAA,iBAqCC;YApCC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;iBAC5B,IAAI,CAAC,UAAA,aAAa;gBAEjB,KAAI,CAAC,WAAW,EAAE,CAAC;gBAEnB,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;oBACnB,MAAM,CAAC;gBACT,CAAC;gBAED,aAAa,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAA5B,CAA4B,CAAC,CAAC;gBACzD,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;gBAEnC,KAAI,CAAC,4BAA4B,GAAG,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,mCAAgB,EAAE,UAAA,CAAC;oBACvE,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,CAAC;wBAC1B,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;wBAC5B,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC3B,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC;gCACjB,IAAI,IAAI,GAAsB,CAAE,CAAC,IAAI,CAAC;gCACtC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;oCAC3C,IAAI,KAAK,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oCAC1C,IAAI,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oCAC7C,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oCACpC,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,mBAAmB,KAAK,YAAY,CAAC,CAAC,CAAC;wCACtD,OAAO,KAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;oCAC1C,CAAC;gCACH,CAAC;4BACH,CAAC,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,8BAA8B,GAAG,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,uCAAkB,EAAE,UAAA,CAAC;oBAC3E,IAAI,YAAY,GAAwB,CAAE,CAAC,YAAY,CAAC;oBACxD,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,+CAAoB,GAA5B,UAA6B,YAA0B;YAAvD,iBAQC;YAPG,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ;gBACnC,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACzE,KAAK,IAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC;gBACnC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QACtC,CAAC;QAzFH;YAAC,8BAAU;;4BAAA;QA0FX,uBAAC;IAAD,CAzFA,AAyFC,IAAA;IAzFY,wBAAgB,mBAyF5B,CAAA;;;;;;;;;;;;;;IC3FD;QAQI,6BAAoB,OAA4B,EAAU,EAAmB,EAAU,MAAc;YAAjF,YAAO,GAAP,OAAO,CAAqB;YAAU,OAAE,GAAF,EAAE,CAAiB;YAAU,WAAM,GAAN,MAAM,CAAQ;QAAI,CAAC;QAE1G,oCAAM,GAAN;YACI,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAClE,CAAC;QAED,sCAAQ,GAAR;YAAA,iBAkBC;YAjBG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAEtD,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,2CAAoB,EAAE,UAAA,CAAC;gBAC7E,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,KAAK,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7C,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC3B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAC5B,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,iCAAe,EAAE,UAAA,CAAC;gBACnE,IAAI,OAAO,GAAqB,CAAE,CAAC,OAAO,CAAC;gBAC3C,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,KAAK,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;oBAClD,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBAC5C,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;gBACpC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,sCAAQ,GAAR;YACI,IAAI,CAAC,gCAAgC,CAAC,OAAO,EAAE,CAAC;YAChD,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC/C,CAAC;QApCD;YAAC,4BAAQ;;iEAAA;QAFb;YAAC,8BAAU;;+BAAA;QAuCX,0BAAC;IAAD,CAtCA,AAsCC,IAAA;IAtCY,2BAAmB,sBAsC/B,CAAA;;;;;;;;;;;;;;IC3CD;QAKI,kBAAoB,OAAqB,EAAE,iBAA8C;YAArE,YAAO,GAAP,OAAO,CAAc;YACrC,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;QAChE,CAAC;QAED,oCAAiB,GAAjB,UAAkB,KAAa;YAA/B,iBAKC;YAJG,MAAM,CAAC,IAAI,OAAO,CAAU,UAAA,OAAO;gBAC/B,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;qBACrB,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC;YAChC,CAAC,CAAC,CAAA;QACN,CAAC;QAbD;YAAC,4BAAQ,CAAC,EAAE,kBAAkB,EAAE,+BAAW,CAAC,MAAM,EAAE,CAAC;;kDAAA;QAFzD;YAAC,8BAAU;;oBAAA;QAgBX,eAAC;IAAD,CAfA,AAeC,IAAA;IAfY,gBAAQ,WAepB,CAAA;IAED,oCAAe;SACV,MAAM,CAAC,UAAC,CAAW,IAAK,OAAA,CAAC,CAAC,QAAQ,EAAV,CAAU,CAAC;SACnC,SAAS,CAAC,UAAC,KAAK,EAAE,GAAG,IAAK,OAAA,GAAG,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAA5B,CAA4B,CAAC;SACvD,WAAW,CAAC,0DAA0D,CAAC;SACvE,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;;ICzBlB;QAAA;QAIA,CAAC;QAAD,qBAAC;IAAD,CAJA,AAIC,IAAA;IAJY,sBAAc,iBAI1B,CAAA;;;;;;;;;;;;;;ICID;QAEI,wBAAoB,IAAgB,EACxB,QAAkB,EAClB,KAAY,EACZ,OAAgB;YAHR,SAAI,GAAJ,IAAI,CAAY;YACxB,aAAQ,GAAR,QAAQ,CAAU;YAClB,UAAK,GAAL,KAAK,CAAO;YACZ,YAAO,GAAP,OAAO,CAAS;QAAI,CAAC;QAEjC,uCAAc,GAAd,UAAe,KAAqB;YAApC,iBAkBC;YAjBG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;oBACpC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,cAAc,EAAE,KAAK,CAAC;yBAC5D,IAAI,CAAC,UAAA,QAAQ;wBACV,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;wBAC3B,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;wBACvD,OAAO,EAAE,CAAC;oBACd,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC;gBAC9D,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;oBACpC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,iBAAiB,EAAE,KAAK,CAAC;yBAC9D,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC;yBAC3B,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC;gBAC9D,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QA1BL;YAAC,8BAAU;;0BAAA;QA4BX,qBAAC;IAAD,CA3BA,AA2BC,IAAA;IA3BY,sBAAc,iBA2B1B,CAAA;;;;;;;;;;;;;;ICxBD;QAWI,iBAAoB,OAAuB,EAC3B,MAAc,EACd,EAAmB,EACnB,KAAY,EACpB,iBAA8C;YAJlC,YAAO,GAAP,OAAO,CAAgB;YAC3B,WAAM,GAAN,MAAM,CAAQ;YACd,OAAE,GAAF,EAAE,CAAiB;YACnB,UAAK,GAAL,KAAK,CAAO;YAExB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;YAC7B,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;QAChE,CAAC;QAED,0BAAQ,GAAR;YAAA,iBAMC;YALG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,+CAAsB,EAAE,UAAA,CAAC;gBAC1E,EAAE,CAAC,CAA0B,CAAE,CAAC,KAAK,KAAK,8BAAe,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClE,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC;gBACtC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,0BAAQ,GAAR;YACI,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC/C,CAAC;QAED,gCAAc,GAAd;YAAA,iBAiBC;YAhBG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,KAAK,GAAoB;oBACrB,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,eAAe,EAAE,IAAI,CAAC,eAAe;iBACxC,CAAC;gBAEN,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC;qBAC7B,IAAI,CAAC;oBACF,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBACxC,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,YAAY,GAAG,KAAK,EAAzB,CAAyB,CAAC,CAAC;YACnD,CAAC;QACL,CAAC;QAnDL;YAAC,8BAAU;;mBAAA;QAoDX,cAAC;IAAD,CAnDA,AAmDC,IAAA;IAnDY,eAAO,UAmDnB,CAAA;IAED,oCAAe,CAAC,UAAU,CACtB,iBAAiB,EACjB,UAAC,KAAK,EAAE,GAAG,EAAE,iBAAiB;QAC1B,OAAA,KAAK,KAAK,IAAI;eACX,KAAK,KAAK,SAAS;eACnB,KAAK,KAAK,EAAE;eACZ,GAAG,CAAC,iBAAiB,CAAC,KAAK,IAAI;eAC/B,GAAG,CAAC,iBAAiB,CAAC,KAAK,SAAS;eACpC,GAAG,CAAC,iBAAiB,CAAC,KAAK,EAAE;eAC7B,KAAK,KAAK,GAAG,CAAC,iBAAiB,CAAC;IANnC,CAMmC,EACvC,yDAAyD,EACzD,UAAA,iBAAiB,IAAI,OAAA,CAAC,EAAE,oCAAiB,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;IAGlD,oCAAe;SACV,MAAM,CAAC,UAAC,CAAU,IAAK,OAAA,CAAC,CAAC,eAAe,EAAjB,CAAiB,CAAC;SACrC,WAAW,CAAC,sBAAsB,CAAC;SACnC,QAAQ,EAAE;SACV,aAAa,CAAC,iBAAiB,EAAE,aAAa,CAAC;SAC3C,WAAW,CAAC,8CAA8C,CAAC;SACnE,MAAM,CAAC,UAAC,CAAU,IAAK,OAAA,CAAC,CAAC,WAAW,EAAb,CAAa,CAAC;SACjC,WAAW,CAAC,cAAc,CAAC;SAC3B,QAAQ,EAAE;SACV,OAAO,CAAC,mDAAmD,CAAC;SACxD,WAAW,CAAC,oGAAoG,CAAC;SACrH,SAAS,CAAC,CAAC,CAAC;SAChB,EAAE,CAAC,OAAO,CAAC,CAAC;;;;;;;;;;;;;;ICpFjB;QAMI,iBAAoB,OAAqB,EAC7B,MAAc,EACd,OAAgB,EACxB,iBAA8C;YAH9B,YAAO,GAAP,OAAO,CAAc;YAC7B,WAAM,GAAN,MAAM,CAAQ;YACd,YAAO,GAAP,OAAO,CAAS;YAExB,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;YAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAClD,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACjD,CAAC;QAED,yBAAO,GAAP;YAAA,iBAgBC;YAfG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;iBACrB,IAAI,CAAC;gBACF,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC;qBAC9B,IAAI,CAAC;oBACF,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBACxC,CAAC,CAAC;qBACD,KAAK,CAAC,UAAC,CAAQ;oBACZ,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;wBACxB,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;oBACzC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACnB,CAAC;gBACL,CAAC,CAAC,CAAC;YACX,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,CAAC,EAAd,CAAc,CAAC,CAAC;QACpC,CAAC;QAjCL;YAAC,8BAAU;;mBAAA;QAkCX,cAAC;IAAD,CAjCA,AAiCC,IAAA;IAjCY,eAAO,UAiCnB,CAAA;;;;;;;;;;;;;;IChCD;QAOI,cAAmB,WAAwB,EAC/B,YAA0B,EAC1B,EAAmB;YAFZ,gBAAW,GAAX,WAAW,CAAa;YAC/B,iBAAY,GAAZ,YAAY,CAAc;YAC1B,OAAE,GAAF,EAAE,CAAiB;QAAI,CAAC;QAEpC,8BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACvD,MAAM,CAAC,GAAG,CAAC;gBACP,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAkB,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,sCAAsC,EAAE;aAC9G,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC;QAED,uBAAQ,GAAR;YAAA,iBAUC;YATG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,+CAAsB,EAAE,UAAA,CAAC;gBAC1E,KAAI,CAAC,iBAAiB,CAA0B,CAAE,CAAC,KAAK,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YAEtD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,KAAK,8BAAe,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAC7B,CAAC;QACL,CAAC;QAED,uBAAQ,GAAR;YACI,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC/C,CAAC;QAEO,gCAAiB,GAAzB,UAA0B,KAAsB;YAC5C,EAAE,CAAC,CAAC,KAAK,KAAK,8BAAe,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;YAC/B,CAAC;YAAC,EAAE,CAAC,CAAC,KAAK,KAAK,8BAAe,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAChC,CAAC;QACL,CAAC;QA5CL;YAAC,8BAAU;;gBAAA;QA6CX,WAAC;IAAD,CA5CA,AA4CC,IAAA;IA5CY,YAAI,OA4ChB,CAAA;;;;;;;;;;;;;;IC9CD;QAMI,eAAoB,OAAqB,EAAU,MAAc,EAAE,QAAkB;YAAjE,YAAO,GAAP,OAAO,CAAc;YAAU,WAAM,GAAN,MAAM,CAAQ;YAC7D,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAC/B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,UAAU;gBACpC,QAAQ,CAAC,WAAW;gBACpB,2BAA2B;gBAC3B,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrE,CAAC;QAED,qBAAK,GAAL,UAAM,QAAgB;YAAtB,iBAQC;YAPG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC;iBAC7B,IAAI,CAAC;gBACF,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACxC,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAY;gBAChB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,CAAC,CAAC,CAAC;QACX,CAAC;QAED,wBAAQ,GAAR;YAAA,iBAMC;YALG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;iBACrB,IAAI,CAAC,UAAA,CAAC;gBACH,OAAA,KAAI,CAAC,KAAK,GAAG,CAAC;YAAd,CAAc,CAAC;iBAClB,KAAK,CAAC,UAAA,CAAC;gBACJ,OAAA,KAAI,CAAC,KAAK,GAAG,CAAC;YAAd,CAAc,CAAC,CAAC;QAC5B,CAAC;QA/BL;YAAC,8BAAU;;iBAAA;QAgCX,YAAC;IAAD,CA/BA,AA+BC,IAAA;IA/BY,aAAK,QA+BjB,CAAA;;;;;ICpCD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzhYA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["export default {\n  debug: true,\n  testing: true,\n  apiBaseUrl: 'http://localhost:5000'\n};\n","export class Settings {\n    apiBaseUrl = 'http://localhost:5000';\n    userAPI = '/api/users';\n    convAPI = '/api/chat/conv';\n    chatAPI = '/api/chat';\n    accountdAPI = \"/account\";\n}","/**\n * Manage connected user state\n */\nexport class State {\n    userName: string;\n    isGuess: boolean;\n}","class Key {\n    IDBCursorWithValue: string;\n}\n\nclass ErrorMessage {\n    errorMessage: string;\n}\n\nexport class ServiceError {\n    key: string;\n    subKey: Key;\n    errors: Array<ErrorMessage>;\n}\n\n","export class Attendee {\n    constructor(public userId?: string) { }\n}","export class Message {\n    conversationId: string;\n    from: string;\n    text: string;\n    date: Date;\n}","import { Attendee } from './attendee';\nimport { Message } from './message';\n\nexport class Conversation {\n    id: string;\n    title: string;\n    attendees: Attendee[];\n    messages: Message[]\n}","import { autoinject } from 'aurelia-framework';\n\nimport { State } from './state'\n\nimport { ServiceError } from '../model/serviceError';\nimport { Conversation } from '../model/conversation';\n\n@autoinject\nexport class Helpers {\n    location: Location;\n    constructor(private state: State) {\n        this.location = window.location;\n     }\n\n    getError(error: any) : Error {\n        let errors = <ServiceError[]> error.content;\n        let se = errors[0];\n        let e = new Error(se.errors[0].errorMessage);\n        e.name = se.key;\n        return e;\n    }\n\n     setConverationTitle(conversation: Conversation) {\n        if (conversation.title) {\n            return;\n        }\n\n        let title = '';\n        conversation.attendees.forEach(attendee => {\n            if (attendee && attendee.userId && attendee.userId !== this.state.userName) {\n                title += attendee.userId + ' ';\n            }\n        });\n        conversation.title = title.trim();\n    }\n\n    getUrlParameter(name): string {\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n        var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n        var results = regex.exec(this.location.search);\n        return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n    }\n}","import { Conversation } from './conversation';\n\nexport class User {\n    id: string;\n    name: string;\n    conversation: Conversation;\n}","import { ConnectionState } from '../services/chat.service';\n\nexport class ConnectionStateChanged {\n    constructor(public state: ConnectionState) { }\n}","import { Conversation } from '../model/conversation';\n\nexport class ConversationJoined {\n    constructor(public conversation: Conversation) { }\n}","import { Message } from '../model/message';\n\nexport class MessageReceived {\n    constructor(public message: Message) { }\n}","import { User } from '../model/user';\n\nexport class UserConnected {\n    constructor(public user: User) { }\n}","import { Disconnected } from '../services/chat.service'\nexport class UserDisconnected {\n    constructor(public user: Disconnected) { }\n}","import { EventAggregator } from 'aurelia-event-aggregator';\nimport { HttpClient } from 'aurelia-http-client';\nimport { autoinject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport environment from '../environment';\n\nimport { Settings } from '../config/settings';\nimport { Helpers } from './helpers';\nimport { State } from './state';\n\nimport { User } from '../model/user';\nimport { Message } from '../model/message';\nimport { Conversation } from '../model/conversation';\n\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\nimport { ConversationJoined } from '../events/conversationJoined';\nimport { MessageReceived } from '../events/messageReceived';\nimport { UserConnected } from '../events/userConnected';\nimport { UserDisconnected } from '../events/userDisconnected';\nimport { ServiceError } from '../model/serviceError';\n\ninterface ChatSignalR extends SignalR {\n    chat: ChatProxy,\n    hub: any\n}\n\ninterface ChatProxy {\n    client: ChatClient\n}\n\ninterface ChatClient {\n    userConnected: (user: User) => void;\n    userDisconnected: (user: Disconnected) => void;\n    messageReceived: (message: Message) => void;\n    joinConversation: (conversation: Conversation) => void;\n}\n\nexport interface Disconnected {\n    id: string;\n    isRemoved: boolean\n}\n\nexport enum ConnectionState {  \n    Connected = 1,\n    Disconnected = 2,\n    Error = 3\n}\n\n@autoinject\nexport class ChatService {\n    currentState = ConnectionState.Disconnected;    \n    currentConversation: Conversation;\n\n    constructor(private settings: Settings, \n        private ea: EventAggregator, \n        private http: HttpClient, \n        private state: State, \n        private helpers: Helpers) { }\n    \n    start(): Promise<ConnectionState> {\n        \n        let debug = environment.debug;\n        // only for debug\n        let hub = jQuery.connection.hub; \n        hub.logging = debug;\n        hub.url = this.settings.apiBaseUrl + '/signalr';\n        // get the signalR hub named 'chat'\n        let connection = <ChatSignalR>jQuery.connection;\n        let chatHub = connection.chat;\n        \n        /**\n          * @desc callback when a new user connect to the chat\n          * @param User user, the connected user\n        */\n        chatHub.client.userConnected = user => this.onUserConnected(user);\n        /**\n          * @desc callback when a new user disconnect the chat\n          * @param id, the disconnected user id\n        */\n        chatHub.client.userDisconnected = user => this.onUserDisconnected(user);\n        /**\n          * @desc callback when a message is received\n          * @param String to, the conversation id\n          * @param Message data, the message\n        */\n        chatHub.client.messageReceived = message => this.onMessageReceived(message);\n        /**\n          * @desc callback when a new conversation is create on server\n          * @param Conv data, the conversation model\n        */\n        chatHub.client.joinConversation = conversation => this.onJoinConversation(conversation);\n\n        if (debug) {\n            // for debug only, callback on connection state change\n            hub.stateChanged(change => {\n                let oldState: string,\n                    newState: string;\n                \n                let signalR = jQuery.signalR;\n                for (var state in signalR.connectionState) {\n                    if (signalR.connectionState[state] === change.oldState) {\n                        oldState = state;\n                    }\n                    if (signalR.connectionState[state] === change.newState) {\n                        newState = state;\n                    }\n                }\n\n                console.log(\"Chat Hub state changed from \" + oldState + \" to \" + newState);\n            });                        \n        }\n\n        // callback on connection reconnect\n        hub.reconnected(() => this.onReconnected());\n        // callback on connection error\n        hub.error(error => this.onError(error) );\n        // callback on connection disconnect\n        hub.disconnected(() => this.onDisconnected());\n    \n        // start the connection\n        return new Promise<ConnectionState>((resolve, reject) => {\n            hub.start()\n                .done(() => { \n                    this.setConnectionState(ConnectionState.Connected);\n                    resolve(ConnectionState.Connected);\n                })\n                .fail(error => {\n                    this.setConnectionState(ConnectionState.Error)\n                    reject(new Error(error));\n                });\n        });\n    }\n\n    stop() {\n        jQuery.connection.hub.stop();\n    }\n\n    private setConnectionState(connectionState: ConnectionState) {\n        if (this.currentState === connectionState) {\n            return;\n        }\n        \n        console.log('connection state changed to: ' + connectionState);\n        this.currentState = connectionState;\n        this.ea.publish(new ConnectionStateChanged(connectionState));\n    }\n       \n    private onReconnected() {\n        this.setConnectionState(ConnectionState.Connected);\n    }\n\n    private onDisconnected() {\n        this.setConnectionState(ConnectionState.Disconnected);\n    }\n\n    private onError(error: any) {\n        this.setConnectionState(ConnectionState.Error);\n    }\n\n    private onUserConnected(user: User) {\n        console.log(\"Chat Hub new user connected: \" + user.id);\n        this.ea.publish(new UserConnected(user));\n    }\n\n    private onUserDisconnected(user: Disconnected) {\n        console.log(\"Chat Hub user disconnected: \" + user.id);\n        if (user.id !== this.state.userName) {\n            this.ea.publish(new UserDisconnected(user));\n        }\n    }   \n\n    private onMessageReceived(message: Message) {\n        this.ea.publish(new MessageReceived(message));\n    }\n\n    private onJoinConversation(conversation: Conversation) {\n        this.helpers.setConverationTitle(conversation);\n        this.ea.publish(new ConversationJoined(conversation));\n    }\n}","import { HttpClient } from 'aurelia-http-client';\nimport { autoinject } from 'aurelia-framework';\n\nimport { Settings } from '../config/settings';\nimport { ChatService } from './chat.service';\nimport { Helpers } from './helpers';\nimport { State } from './state';\n\n@autoinject\nexport class LoginService {\n    private xhrf: string;\n    constructor(private http: HttpClient,\n        private settings: Settings,\n        private chatService: ChatService,\n        private state: State,\n        private helpers: Helpers) { }\n\n    getXhrf(clearCookies?: Boolean): Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            if (clearCookies) {\n                this.http.get('cls')\n                    .then(() => this.setXhrf(resolve, reject))\n                    .catch(e => reject(new Error('the service is down')));\n            } else if (this.xhrf) {\n                resolve(this.xhrf);\n            } else {\n                this.setXhrf(resolve, reject);\n            }\n        });\n    }\n\n    login(userName: string, password: string): Promise<string> {\n        this.state.isGuess = !password;\n\n        return new Promise<string>((resolve, reject) => {\n            this.getXhrf()\n                .then(r => {\n                    if (this.state.isGuess) {\n                        this.loginAsGuess(userName, resolve, reject);\n                    } else {\n                        this.loginAsRegistered(userName, password, resolve, reject);\n                    }\n                })\n                .catch(error => reject(error));\n        });\n    }\n\n    logoff() {\n        delete this.state.userName;        \n        sessionStorage.removeItem('userName');\n        this.chatService.stop();        \n        this.getXhrf()\n            .then(r => { \n                this.http.post(this.settings.accountdAPI + '/spalogoff', null);                \n            });\n\n        delete this.xhrf;\n    }\n\n    exists(userName): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.getXhrf()\n                .then(r => {\n                    this.http.get(this.settings.accountdAPI + \"/exists?userName=\" + encodeURIComponent(userName))\n                        .then(response => {\n                            resolve(response.content);\n                        })\n                        .catch(error => reject(new Error('the service is down')));\n                })\n                .catch(error => reject(new Error('the service is down')));\n        });\n    }\n\n    confirm(userName): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.getXhrf()\n                .then(r => {\n                    this.http.put(this.settings.accountdAPI + \"/spaExternalLoginConfirmation\", { userName: userName })\n                        .then(response => {\n                            this.logged(userName, resolve, reject);\n                        })\n                        .catch(error => reject(this.helpers.getError(error)));\n                })\n                .catch(error => reject(new Error('the service is down')));\n        });\n    }\n\n    private setXhrf(resolve: Function, reject: Function) {\n        this.http.get('xhrf')\n            .then(r => {\n                this.xhrf = r.response\n                this.http.configure(builder => {\n                    builder.withHeader('X-XSRF-TOKEN', this.xhrf);\n                });\n                resolve(this.xhrf);\n            })\n            .catch(error => reject(new Error('the service is down')));\n    }\n\n    private loginAsGuess(userName, resolve: Function, reject: Function) {\n        this.http.post(this.settings.accountdAPI + '/spaguess', { userName: userName })\n            .then(response => {\n                this.logged(userName, resolve, reject);\n            })\n            .catch(error => {\n                reject(this.helpers.getError(error));\n            });\n    }\n\n    private loginAsRegistered(userName: string, password: string, resolve: Function, reject: Function) {\n        this.http.post(this.settings.accountdAPI + '/spalogin', { userName: userName, password: password })\n            .then(response => {\n                this.logged(userName, resolve, reject);\n                sessionStorage.setItem('userName', userName);\n            })\n            .catch(error => {\n                reject(this.helpers.getError(error));\n            })\n    }\n\n    private logged(userName: string, resolve: Function, reject: Function) {\n        this.state.userName = userName;\n        this.chatService.start();\n        // get a new token for the session lifecycle\n        this.setXhrf(resolve, reject);\n    }\n}","import { autoinject } from 'aurelia-framework';\nimport { Router, Redirect, NavigationInstruction, RouterConfiguration, Next, RouteConfig } from 'aurelia-router';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { HttpClient } from 'aurelia-http-client';\nimport environment from './environment';\n\nimport { ConnectionState } from './services/chat.service';\nimport { LoginService } from './services/login.service';\nimport { State } from './services/state';\nimport { ConnectionStateChanged } from './events/connectionStateChanged';\nimport { Settings } from './config/settings';\nimport { Helpers } from './services/helpers';\n\ninterface CustomRouteConfig extends RouteConfig {\n    anomymous: boolean;\n}\n\n@autoinject\nexport class App {\n    router: Router;\n    isConnected: boolean;\n    userName: string;\n    errorMessage: string;\n\n    constructor(private service: LoginService,\n        private ea: EventAggregator,\n        private state: State,\n        settings: Settings,\n        http: HttpClient) {\n        settings.apiBaseUrl = environment.apiBaseUrl;\n        http.configure(\n            builder => builder\n                .withBaseUrl(environment.apiBaseUrl)\n                .withCredentials(true));\n    }\n\n    configureRouter(config: RouterConfiguration, router: Router) {\n        config.title = 'Chatle';\n        config.addPipelineStep('authorize', AuthorizeStep);\n        config.map([\n            { route: ['', 'home'], name: 'home', moduleId: 'pages/home', title: 'Home' },\n            { route: 'account', name: 'account', moduleId: 'pages/account', title: 'Account' },\n            { route: 'login', name: 'login', moduleId: 'pages/login', title: 'Login', anomymous: true },\n            { route: 'confirm', name: 'confirm', moduleId: 'pages/confirm', title: 'Confirm', anomymous: true }\n        ]);\n\n        this.router = router;\n    }\n\n    attached() {\n        this.ea.subscribe(ConnectionStateChanged, e => {\n            this.setIsConnected();\n        });\n        this.setIsConnected();\n    }\n\n    logoff() {\n        this.service.logoff();\n        this.router.navigateToRoute('login');\n    }\n\n    manage() {\n        this.router.navigateToRoute('account');\n    }\n\n    private setIsConnected() {\n        this.isConnected = this.state.userName !== undefined && this.state.userName != null;\n        this.userName = this.state.userName;\n    }\n\n}\n\n@autoinject\nclass AuthorizeStep {\n\n    constructor(private state: State, private helpers: Helpers) { }\n\n    run(navigationInstruction: NavigationInstruction, next: Next): Promise<any> {\n        if (navigationInstruction.getAllInstructions().some(i => {\n            let route = i.config as CustomRouteConfig;\n            return !route.anomymous;\n        })) {\n            let provider = this.helpers.getUrlParameter('p') \n            if (provider) {\n                return next.cancel(new Redirect('confirm'));\n            }\n\n            let userName = this.helpers.getUrlParameter('u') \n            if (userName) {\n                this.state.userName = userName;\n            }\n\n            let isLoggedIn = this.state.userName;\n            if (!isLoggedIn) {\n                return next.cancel(new Redirect('login'));\n            }\n        }\n\n        return next();\n    }\n}","import { Aurelia, LogManager } from 'aurelia-framework'\nimport {ConsoleAppender} from 'aurelia-logging-console';\nimport environment from './environment';\n\nif (environment.debug) {\n    LogManager.addAppender(new ConsoleAppender());\n    LogManager.setLevel(LogManager.logLevel.debug);\n}\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-validation');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { HttpClient } from 'aurelia-http-client';\nimport { autoinject } from 'aurelia-framework';\n\nimport { Settings } from '../config/settings';\nimport { State } from './state'\n\nimport { User } from '../model/user';\n\n@autoinject\nexport class UserService {\n\n    constructor(private http: HttpClient, \n        private settings: Settings,\n        private state: State) { }\n\n    getUsers(): Promise<User[]> {\n        return new Promise<User[]>((resolve, reject) => {\n            this.http.get(this.settings.userAPI)\n                .then(response => {\n                        var data = response.content;\n                        if (data && data.users) {\n                            resolve(<User[]>data.users);\n                        }\n                    })\n                .catch(error => reject(new Error('the service is down')));\n        });\n    }\n}","import { autoinject } from 'aurelia-framework';\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\n\nimport { ConnectionState } from '../services/chat.service';\nimport { UserService } from '../services/user.service';\nimport { ChatService } from '../services/chat.service';\n\nimport { User } from '../model/user';\nimport { UserConnected } from '../events/userConnected'\nimport { UserDisconnected } from '../events/userDisconnected'\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\n\n@autoinject\nexport class ContactList {\n    users: User[];\n    loadingMessage = \"loading...\";\n    private userConnectedSubscription: Subscription;\n    private userDisconnectedSubscription: Subscription;\n    private connectionStateChangeSubscription: Subscription;\n\n    constructor(private userService: UserService,\n        private chatService: ChatService,\n        private ea: EventAggregator) { }\n\n    attached() {\n        this.connectionStateChangeSubscription = this.ea.subscribe(ConnectionStateChanged, e => {\n            if ((<ConnectionStateChanged>e).state === ConnectionState.Connected) {\n                this.getUser();\n            }            \n        });\n\n        if (this.chatService.currentState === ConnectionState.Connected) {\n            this.getUser();\n        }        \n    }\n\n    detached() {\n        this.connectionStateChangeSubscription.dispose();\n        if (this.userConnectedSubscription) {\n            this.userConnectedSubscription.dispose();\n        }\n        if (this.userDisconnectedSubscription) {\n            this.userDisconnectedSubscription.dispose();\n        }\n    }\n\n    private getUser() {\n        this.userService.getUsers()\n            .then(users => {\n                this.users = users;\n\n                this.userConnectedSubscription = this.ea.subscribe(UserConnected, e => {\n                    this.removeUser((<UserConnected>e).user.id);\n                    this.users.unshift(e.user);\n                });\n\n                this.userDisconnectedSubscription = this.ea.subscribe(UserDisconnected, e => {\n                    this.removeUser((<UserDisconnected>e).user.id);\n                });\n            })\n            .catch(error => this.loadingMessage = error);\n    }\n\n    private removeUser(id: string) {\n        let user: User;\n        this.users.forEach(u => {\n            if (u.id === id) {\n                user = u;\n            }\n        });\n\n        if (user) {\n            let index = this.users.indexOf(user);\n            this.users.splice(index, 1);\n        }        \n    }\n}","import { Conversation } from '../model/conversation';\n\nexport class ConversationSelected {\n    constructor(public conversation: Conversation) { }\n}","import { Router } from 'aurelia-router';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { HttpClient } from 'aurelia-http-client';\nimport { autoinject } from 'aurelia-framework';\n\nimport { Settings } from '../config/settings';\nimport { State } from './state'\nimport { Helpers } from './helpers'\n\nimport { Message } from '../model/message';\nimport { Conversation } from '../model/conversation';\nimport { Attendee } from '../model/attendee';\n\nimport { ConversationSelected } from '../events/conversationSelected';\nimport { ConversationJoined } from '../events/conversationJoined';\n\n@autoinject\nexport class ConversationService {\n    currentConversation: Conversation;\n\n    constructor(private http: HttpClient,\n        private settings: Settings,\n        private state: State,\n        private helpers: Helpers,\n        private ea: EventAggregator) { }\n\n    showConversation(conversation: Conversation, router: Router) {\n        this.currentConversation = conversation;\n        this.helpers.setConverationTitle(conversation);\n        this.ea.publish(ConversationSelected, new ConversationSelected(conversation));\n        router.navigateToRoute('conversation', { id: conversation.title });\n    }\n\n    sendMessage(conversation: Conversation, message: string): Promise<Message> {\n        let m = new Message();\n        m.conversationId = conversation.id;\n        m.from = this.state.userName;\n        m.text = message;\n\n        if (conversation.id) {\n            return new Promise<Message>((resolve, reject) => {\n                this.http.post(this.settings.chatAPI, {\n                    to: conversation.id,\n                    text: message\n                })\n                    .then(response => {\n                        conversation.messages.unshift(m);\n                        resolve(m);\n                    })\n                    .catch(error => reject(this.helpers.getError(error)));\n            });\n        } else {\n            let attendee: Attendee;\n            conversation.attendees.forEach(a => {\n                if (a.userId !== this.state.userName) {\n                    attendee = a;\n                }\n            });\n\n            return new Promise<Message>((resolve, reject) => {\n                this.http.post(this.settings.convAPI, {\n                    to: attendee.userId,\n                    text: message\n                })\n                    .then(\n                    response => {\n                        conversation.id = response.content;\n                        this.ea.publish(new ConversationJoined(conversation));\n                        conversation.messages.unshift(m);\n                        resolve(m);\n                    })\n                    .catch(error => reject(this.helpers.getError(error)));\n            });\n        }\n    }\n\n    getConversations(): Promise<Conversation[]> {\n        return new Promise<Conversation[]>((resolve, reject) => {\n            this.http.get(this.settings.chatAPI)\n                .then(response => {\n                    if (response.response) {\n                        let data = response.content;\n                        if (data) {\n                            resolve(<Conversation[]>data);\n                            return;\n                        }\n                    }\n\n                    resolve(null);\n                })\n                .catch(error => reject(new Error('The service is down')));\n        });\n    }\n}","import { bindable, autoinject } from 'aurelia-framework';\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\nimport { Router } from 'aurelia-router';\n\nimport { ConversationService } from '../services/conversation.service';\nimport { State } from '../services/state';\nimport { User } from '../model/user';\nimport { Conversation } from '../model/conversation';\nimport { Attendee } from '../model/attendee';\nimport { Message } from '../model/message';\nimport { ConversationSelected } from '../events/conversationSelected';\n\n@autoinject\nexport class Contact {\n    @bindable user: User;\n    isSelected: boolean;\n    private conversationSelectedSubscription: Subscription;\n\n    constructor(private service: ConversationService, \n        private state,\n        private ea: EventAggregator, \n        private router: Router) { }\n\n    select() {\n        if (!this.user.conversation) {\n            let conversation = new Conversation();\n            let attendees = new Array<Attendee>();\n            let attendee = new Attendee();\n\n            attendee.userId = this.user.id;\n            attendees.push(attendee);\n            conversation.attendees = attendees;\n            conversation.messages = new Array<Message>();\n\n            this.user.conversation = conversation;\n        }\n\n        this.service.showConversation(this.user.conversation, this.router);        \n    }\n\n    attached() {\n        this.conversationSelectedSubscription = this.ea.subscribe(ConversationSelected, e => {\n            let conv = e.conversation as Conversation;\n            let attendees = conv.attendees;\n\n            this.isSelected = false;\n            if (attendees.length == 2) {\n                attendees.forEach(a => {\n                    if (a.userId !== this.state.userName && a.userId === this.user.id) {\n                        this.isSelected = true;\n                    }\n                })\n            }\n        });\n    }\n\n    detached() {\n        this.conversationSelectedSubscription.dispose();\n    }\n}\n\n","import { autoinject } from 'aurelia-framework';\nimport { Router, RouterConfiguration } from 'aurelia-router';\n\nimport { ConversationService } from '../services/conversation.service';\nimport { Conversation } from '../model/conversation';\n\n@autoinject\nexport class ConversationComponent {\n    conversation: Conversation;\n    message: string;\n\n    constructor(private service: ConversationService, private router: Router) {\n    }\n\n    activate(params, routeConfig) {\n        if (!params) {\n            delete this.service.currentConversation;\n        }\n\n        this.conversation = this.service.currentConversation;\n\n        if (!this.conversation) {\n            this.router.navigateToRoute('home');\n        } else {\n            routeConfig.navModel.setTitle(this.conversation.title);\n        }\n    }\n\n    sendMessage() {\n        this.service.sendMessage(this.conversation, this.message);\n        this.conversation.messages.unshift();\n        this.message = '';\n    }\n}\n\n","import { autoinject } from 'aurelia-framework';\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\n\nimport { ConnectionState, Disconnected } from '../services/chat.service';\nimport { ConversationService } from '../services/conversation.service';\nimport { State } from '../services/state';\n\nimport { Conversation } from '../model/conversation';\nimport { ConversationJoined } from '../events/conversationJoined';\nimport { UserDisconnected } from '../events/userDisconnected';\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\n\n@autoinject\nexport class ConversationList {\n  conversations: Conversation[];\n  private conversationJoinedSubscription: Subscription;\n  private userDisconnectedSubscription: Subscription;\n  private connectionStateSubscription: Subscription;\n\n  constructor(private service: ConversationService,\n    private state: State,\n    private ea: EventAggregator) { }\n\n  attached() {\n    this.conversations = new Array<Conversation>();\n\n    this.getConversations();\n\n    this.connectionStateSubscription = this.ea.subscribe(ConnectionStateChanged, e => {\n      let state = (<ConnectionStateChanged>e).state;\n      if (state === ConnectionState.Disconnected) { \n        // remove conversation on log off, disconnection\n        this.conversations.splice(this.conversations.length);\n      } else if (state === ConnectionState.Connected) {\n        // get conversation for reconnect\n        this.getConversations();\n      }\n    });\n  }\n\n  detached() {\n    this.Unsubscribe();\n    this.connectionStateSubscription.dispose();\n  }\n\n  private Unsubscribe() {\n    if (this.conversationJoinedSubscription) {\n      this.conversationJoinedSubscription.dispose();\n    }\n    if (this.userDisconnectedSubscription) {\n      this.userDisconnectedSubscription.dispose();\n    }\n  }\n\n  private getConversations() {\n    this.service.getConversations()\n      .then(conversations => {\n        // Unsubscribe before in case of connection state changed to connected\n        this.Unsubscribe();\n\n        if (!conversations) {\n          return;\n        }\n\n        conversations.forEach(c => this.setConversationTitle(c));\n        this.conversations = conversations;      \n        \n        this.userDisconnectedSubscription = this.ea.subscribe(UserDisconnected, e => {\n          this.conversations.forEach(c => {\n            let attendees = c.attendees;\n            if (attendees.length === 2) {\n              attendees.forEach(a => {\n                let user = (<UserDisconnected>e).user;\n                if (user.isRemoved && a.userId === user.id) {\n                  let index = this.conversations.indexOf(c);\n                  let conversation = this.conversations[index];\n                  this.conversations.splice(index, 1);\n                  if (this.service.currentConversation === conversation) {\n                    delete this.service.currentConversation;\n                  }\n                }\n              });\n            }\n          });          \n        });\n\n        this.conversationJoinedSubscription = this.ea.subscribe(ConversationJoined, e => {\n          let conversation = (<ConversationJoined>e).conversation;          \n          this.conversations.unshift(e.conversation);\n        });\n      });\n  }\n\n  private setConversationTitle(conversation: Conversation) {\n      let title = '';\n      conversation.attendees.forEach(attendee => {\n          if (attendee && attendee.userId && attendee.userId !== this.state.userName) {\n              title += attendee.userId + ' ';\n          }                \n      });\n      conversation.title = title.trim();\n  }\n}","import { bindable, autoinject } from 'aurelia-framework';\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\nimport { Router, RouterConfiguration } from 'aurelia-router';\n\nimport { ConversationService } from '../services/conversation.service';\nimport { Conversation } from '../model/conversation';\nimport { Message } from '../model/message';\nimport { ConversationSelected } from '../events/conversationSelected';\nimport { MessageReceived } from '../events/messageReceived';\n\n@autoinject\nexport class ConversationPreview {\n    @bindable conversation: Conversation;\n    isSelected: boolean;\n    lastMessage: string;\n    \n    private conversationSelectedSubscription: Subscription;\n    private messageReceivedSubscription: Subscription;\n\n    constructor(private service: ConversationService, private ea: EventAggregator, private router: Router) { }\n\n    select() {\n        this.service.showConversation(this.conversation, this.router);\n    }\n\n    attached() {\n        this.lastMessage = this.conversation.messages[0].text;\n\n        this.conversationSelectedSubscription = this.ea.subscribe(ConversationSelected, e => {\n            if (e.conversation.id === this.conversation.id) {\n                this.isSelected = true;\n            } else {\n                this.isSelected = false;\n            }\n        });\n        \n        this.messageReceivedSubscription = this.ea.subscribe(MessageReceived, e => {\n            let message = (<MessageReceived>e).message;\n            if (message.conversationId === this.conversation.id) {                \n                this.conversation.messages.unshift(message);\n                this.lastMessage = message.text;\n            }\n        });\n    }\n\n    detached() {\n        this.conversationSelectedSubscription.dispose();\n        this.messageReceivedSubscription.dispose();\n    }\n}","import { autoinject, bindable, bindingMode } from 'aurelia-framework';\nimport { ValidationControllerFactory, ValidationController, ValidationRules } from 'aurelia-validation';\n\nimport { LoginService } from '../services/login.service';\n\n@autoinject\nexport class UserName {\n    @bindable({ defaultBindingMode: bindingMode.twoWay })\n    userName: string;\n    controller: ValidationController;\n\n    constructor(private service: LoginService, controllerFactory: ValidationControllerFactory) { \n        this.controller = controllerFactory.createForCurrentScope();\n    }\n\n    userNameAvailable(value: string) {        \n        return new Promise<boolean>(resolve => {\n            this.service.exists(value)\n                .then(r => resolve(!r));\n        })\n    }\n}\n\nValidationRules\n    .ensure((c: UserName) => c.userName)\n    .satisfies((value, obj) => obj.userNameAvailable(value))\n    .withMessage('This user name already exists, please choose another one')\n    .on(UserName);\n","import { ValidationRules } from 'aurelia-validation';\n\nexport class ChangePassword {\n    oldPassword: string;\n    newPassword: string;\n    confirmPassword: string;\n}\n","import { HttpClient } from 'aurelia-http-client';\nimport { autoinject } from 'aurelia-framework';\n\nimport { Settings } from '../config/settings';\nimport { State } from './state'\nimport { Helpers } from './helpers'\n\nimport { ChangePassword } from '../model/changePassword';\n\n@autoinject\nexport class AccountService {\n\n    constructor(private http: HttpClient, \n        private settings: Settings,\n        private state: State,\n        private helpers: Helpers) { }\n\n    changePassword(model: ChangePassword): Promise<any> {\n        if (this.state.isGuess) {            \n            return new Promise<any>((resolve, reject) => {\n                this.http.post(this.settings.accountdAPI + '/setpassword', model)\n                    .then(response => {\n                        this.state.isGuess = false;\n                        sessionStorage.setItem('userName', this.state.userName)\n                        resolve();\n                    })\n                    .catch(error => reject(this.helpers.getError(error)));\n            });\n        } else {\n            return new Promise<any>((resolve, reject) => {\n                this.http.put(this.settings.accountdAPI + '/changepassword', model)\n                    .then(response => resolve())\n                    .catch(error => reject(this.helpers.getError(error)));\n            });\n        }\n    }\n\n}","import { autoinject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\nimport { ValidationRules } from 'aurelia-validation';\nimport { ValidationControllerFactory, ValidationController} from 'aurelia-validation';\n\nimport { ConnectionState } from '../services/chat.service';\nimport { State } from '../services/state';\nimport { AccountService } from '../services/account.service';\nimport { ChangePassword } from '../model/changePassword';\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\n\n@autoinject\nexport class Account {\n    userName: string;\n    oldPassword: string;\n    newPassword: string;\n    confirmPassword: string;    \n    errorMessage: string;\n    isGuess: boolean;\n    controller: ValidationController;\n\n    private connectionStateSubscription: Subscription;\n\n    constructor(private service: AccountService, \n            private router: Router, \n            private ea: EventAggregator,\n            private state: State,\n            controllerFactory: ValidationControllerFactory) { \n        this.userName = state.userName;\n        this.isGuess = state.isGuess;\n        this.controller = controllerFactory.createForCurrentScope();                \n    }\n\n    attached() {\n        this.connectionStateSubscription = this.ea.subscribe(ConnectionStateChanged, e => {\n            if ((<ConnectionStateChanged>e).state === ConnectionState.Connected) {\n                this.isGuess = this.state.isGuess;\n            }\n        });\n    }\n\n    detached() {\n        this.connectionStateSubscription.dispose();\n    }\n\n    changePassword() {\n        this.controller.validate();\n\n        if (this.controller.errors.length === 0) {\n            let model = <ChangePassword> {\n                    oldPassword: this.oldPassword,\n                    newPassword: this.newPassword, \n                    confirmPassword: this.confirmPassword\n                };\n\n            this.service.changePassword(model)\n                .then(() => {\n                    this.isGuess = false;\n                    this.router.navigateToRoute('home');\n                })\n                .catch(error => this.errorMessage = error);\n        }\n    }\n}\n\nValidationRules.customRule(\n    'matchesProperty',\n    (value, obj, otherPropertyName) => \n        value === null\n        || value === undefined\n        || value === ''\n        || obj[otherPropertyName] === null\n        || obj[otherPropertyName] === undefined\n        || obj[otherPropertyName] === ''\n        || value === obj[otherPropertyName],\n    '${$displayName} must match ${$config.otherPropertyName}',\n    otherPropertyName => ({ otherPropertyName }));\n\n        \nValidationRules\n    .ensure((a: Account) => a.confirmPassword)\n        .displayName('Confirm new password')\n        .required()\n        .satisfiesRule('matchesProperty', 'newPassword')\n            .withMessage('Confirm new password must match New password')\n    .ensure((a: Account) => a.newPassword)\n        .displayName(\"New password\")\n        .required()\n        .matches(/(?=.*[A-Z])(?=.*[!@#$&\\.\\*\\-\\+\\=\\?£€])(?=.*[0-9])/)\n            .withMessage('${$displayName} must contains at least one uppercase letter, one digit and one special charactere.')\n        .minLength(6)\n    .on(Account);","import { autoinject } from 'aurelia-framework';\nimport { Router, NavigationInstruction } from 'aurelia-router';\nimport { ValidationControllerFactory, ValidationController, ValidationRules } from 'aurelia-validation';\n\nimport { LoginService } from '../services/login.service';\nimport { Helpers } from '../services/helpers';\n\n@autoinject\nexport class Confirm {\n    userName: string;\n    error: Error;\n    controller: ValidationController;\n    provider: string;\n\n    constructor(private service: LoginService,\n        private router: Router,\n        private helpers: Helpers,\n        controllerFactory: ValidationControllerFactory) {\n        this.controller = controllerFactory.createForCurrentScope();\n        this.provider = this.helpers.getUrlParameter('p');\n        this.userName = this.helpers.getUrlParameter('u');\n        window.history.replaceState(null, null, '/');\n    }\n\n    confirm() {\n        this.controller.validate()\n            .then(() => {\n                this.service.confirm(this.userName)\n                    .then(() => {\n                        this.router.navigateToRoute('home');\n                    })\n                    .catch((e: Error) => {\n                        if (e.name === 'NullInfo') {\n                            this.router.navigateToRoute('login');\n                        } else {\n                            this.error = e;\n                        }\n                    });\n            })\n            .catch(e => this.error = e);\n    }\n}\n","import { autoinject } from 'aurelia-framework';\nimport { Router, RouterConfiguration } from 'aurelia-router';\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\n\nimport { ChatService, ConnectionState } from '../services/chat.service';\nimport { LoginService } from '../services/login.service';\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\n\n@autoinject\nexport class Home {\n    router: Router;\n    isDisconnected: boolean;\n\n    private connectionStateSubscription: Subscription;\n    private showConversationSubscription: Subscription;\n\n    constructor(public chatService: ChatService,\n        private loginService: LoginService,\n        private ea: EventAggregator) { }\n\n    configureRouter(config: RouterConfiguration, router: Router) {\n        config.map([\n            { route: ['', 'conversation/:id'], name: 'conversation', moduleId: '../components/conversation-component' }\n        ]);\n\n        this.router = router;\n    }\n\n    attached() {\n        this.connectionStateSubscription = this.ea.subscribe(ConnectionStateChanged, e => {\n            this.setIsDisconnected((<ConnectionStateChanged>e).state);\n        });\n\n        this.setIsDisconnected(this.chatService.currentState);\n\n        if (this.chatService.currentState !== ConnectionState.Connected) {\n            this.chatService.start();\n        }\n    }\n\n    detached() {\n        this.connectionStateSubscription.dispose();\n    }\n\n    private setIsDisconnected(state: ConnectionState) {\n        if (state === ConnectionState.Error) {\n            this.loginService.logoff();\n        } if (state === ConnectionState.Disconnected) {\n            this.isDisconnected = true;\n        } else {\n            this.isDisconnected = false;\n        }\n    }\n}","import { autoinject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\nimport { LoginService } from '../services/login.service';\nimport { Settings } from '../config/settings';\n\n@autoinject\nexport class Login {\n    userName: string;\n    error: Error;\n    externalLogin: string;\n    token: string;\n    \n    constructor(private service: LoginService, private router: Router, settings: Settings) {\n        let location = window.location; \n        this.externalLogin = settings.apiBaseUrl + \n            settings.accountdAPI + \n            '/externalLogin?returnUrl=' + \n            encodeURIComponent(location.protocol + '//' + location.host);\n    }\n\n    login(userName: string) {        \n        this.service.login(userName, null)\n            .then(() => {\n                this.router.navigateToRoute('home');\n            })\n            .catch((error: Error) => {\n                this.error = error;\n            });\n    }\n\n    activate() {\n        this.service.getXhrf(true)\n            .then(t => \n                this.token = t)\n            .catch(e => \n                this.error = e);\n    }\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"../../src"}