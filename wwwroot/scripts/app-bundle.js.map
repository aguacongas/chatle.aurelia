{"version":3,"sources":["environment.ts","config/settings.ts","services/state.ts","model/serviceError.ts","model/attendee.ts","model/message.ts","model/user.ts","model/conversation.ts","services/helpers.ts","events/connectionStateChanged.ts","events/conversationJoined.ts","events/messageReceived.ts","events/userConnected.ts","events/userDisconnected.ts","services/chat.service.ts","app.ts","main.ts","services/user.service.ts","components/contact-list.ts","events/conversationSelected.ts","services/conversation.service.ts","components/contact.ts","components/conversation-component.ts","events/notificationClicked.ts","components/conversation-list.ts","components/conversation-preview.ts","model/provider.ts","services/login.service.ts","components/user-name.ts","model/changePassword.ts","model/manage-logins.ts","services/account.service.ts","pages/account.ts","pages/confirm.ts","services/notification.service.ts","pages/home.ts","pages/login.ts","resources/index.ts","C:/Projects/Perso/chatle.aurelia/src/signalr-client.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validate-binding-behavior.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validation-controller.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validator.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validate-trigger.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/property-info.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validation-error.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validation-controller-factory.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validation-errors-custom-attribute.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/validation-renderer-custom-attribute.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/rules.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/standard-validator.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/validation-messages.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/validation-parser.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/util.js","C:/Projects/Perso/chatle.aurelia/node_modules/aurelia-validation/dist/amd/implementation/validation-rules.js","C:/Projects/Perso/chatle.aurelia/src/app.html","C:/Projects/Perso/chatle.aurelia/src/css/site.css","C:/Projects/Perso/chatle.aurelia/src/components/contact-list.html","C:/Projects/Perso/chatle.aurelia/src/css/site.min.css","C:/Projects/Perso/chatle.aurelia/src/components/contact.html","C:/Projects/Perso/chatle.aurelia/src/components/conversation-component.html","C:/Projects/Perso/chatle.aurelia/src/components/conversation-list.html","C:/Projects/Perso/chatle.aurelia/src/components/conversation-preview.html","C:/Projects/Perso/chatle.aurelia/src/components/user-name.html","C:/Projects/Perso/chatle.aurelia/src/pages/account.html","C:/Projects/Perso/chatle.aurelia/src/pages/confirm.html","C:/Projects/Perso/chatle.aurelia/src/pages/home.html","C:/Projects/Perso/chatle.aurelia/src/pages/login.html"],"names":[],"mappings":";;;IAAA,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,uBAAuB;QACnC,YAAY,EAAE,EAAE;KACjB,CAAC;;;;;;ICLF;QAAA;YACI,eAAU,GAAG,uBAAuB,CAAC;YACrC,YAAO,GAAG,YAAY,CAAC;YACvB,YAAO,GAAG,gBAAgB,CAAC;YAC3B,YAAO,GAAG,WAAW,CAAC;YACtB,gBAAW,GAAG,UAAU,CAAC;QAC7B,CAAC;QAAD,eAAC;IAAD,CANA,AAMC,IAAA;IANY,4BAAQ;;;;;;ICGrB;QAAA;QAGA,CAAC;QAAD,YAAC;IAAD,CAHA,AAGC,IAAA;IAHY,sBAAK;;;;;;ICHlB;QAAA;QAEA,CAAC;QAAD,UAAC;IAAD,CAFA,AAEC,IAAA;IAED;QAAA;QAEA,CAAC;QAAD,mBAAC;IAAD,CAFA,AAEC,IAAA;IAED;QAAA;QAIA,CAAC;QAAD,mBAAC;IAAD,CAJA,AAIC,IAAA;IAJY,oCAAY;;;;;;ICRzB;QACI,kBAAmB,MAAe;YAAf,WAAM,GAAN,MAAM,CAAS;QAAI,CAAC;QAC3C,eAAC;IAAD,CAFA,AAEC,IAAA;IAFY,4BAAQ;;;;;;ICArB;QAAA;QAKA,CAAC;QAAD,cAAC;IAAD,CALA,AAKC,IAAA;IALY,0BAAO;;;;;;ICEpB;QAAA;QAIA,CAAC;QAAD,WAAC;IAAD,CAJA,AAIC,IAAA;IAJY,oBAAI;;;;;;ICEjB;QAOI,sBAAY,IAAW;YACnB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,MAAM,CAAC;YACX,CAAC;YAED,IAAI,SAAS,GAAG,IAAI,KAAK,EAAY,CAAC;YACtC,SAAS,CAAC,IAAI,CAAC,IAAI,mBAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAW,CAAC;YACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAClC,CAAC;QACL,mBAAC;IAAD,CAlBA,AAkBC,IAAA;IAlBY,oCAAY;;;;;;;;;;;;;;;ICIzB;QAEI,iBAAoB,KAAY;YAAZ,UAAK,GAAL,KAAK,CAAO;YAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACnC,CAAC;QAEF,0BAAQ,GAAR,UAAS,KAAU;YACf,IAAI,MAAM,GAAoB,KAAK,CAAC,OAAO,CAAC;YAC5C,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;YAC7C,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC;YAChB,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QAEA,qCAAmB,GAAnB,UAAoB,YAA0B;YAA9C,iBAYA;YAXG,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC;YACX,CAAC;YAED,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ;gBACnC,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACzE,KAAK,IAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC;gBACnC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QACtC,CAAC;QAED,iCAAe,GAAf,UAAgB,IAAI;YAChB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC1D,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,QAAQ,GAAG,IAAI,GAAG,WAAW,CAAC,CAAC;YACtD,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,OAAO,KAAK,IAAI,GAAG,SAAS,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QAC7F,CAAC;QAjCQ,OAAO;YADnB,8BAAU;6CAGoB,aAAK;WAFvB,OAAO,CAkCnB;QAAD,cAAC;KAlCD,AAkCC,IAAA;IAlCY,0BAAO;;;;;;ICNpB;QACI,gCAAmB,KAAsB;YAAtB,UAAK,GAAL,KAAK,CAAiB;QAAI,CAAC;QAClD,6BAAC;IAAD,CAFA,AAEC,IAAA;IAFY,wDAAsB;;;;;;ICAnC;QACI,4BAAmB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;QAAI,CAAC;QACtD,yBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,gDAAkB;;;;;;ICA/B;QACI,yBAAmB,OAAgB;YAAhB,YAAO,GAAP,OAAO,CAAS;QAAI,CAAC;QAC5C,sBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,0CAAe;;;;;;ICA5B;QACI,uBAAmB,IAAU;YAAV,SAAI,GAAJ,IAAI,CAAM;QAAI,CAAC;QACtC,oBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,sCAAa;;;;;;ICD1B;QACI,0BAAmB,IAAkB;YAAlB,SAAI,GAAJ,IAAI,CAAc;QAAI,CAAC;QAC9C,uBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,4CAAgB;;;;;;;;;;;;;;;IC2B7B,IAAY,eAIX;IAJD,WAAY,eAAe;QACvB,+DAAa,CAAA;QACb,qEAAgB,CAAA;QAChB,uDAAS,CAAA;IACb,CAAC,EAJW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAI1B;IAGD;QAKI,qBAAoB,QAAkB,EAC1B,EAAmB,EACnB,IAAgB,EAChB,KAAY,EACZ,OAAgB;YAJR,aAAQ,GAAR,QAAQ,CAAU;YAC1B,OAAE,GAAF,EAAE,CAAiB;YACnB,SAAI,GAAJ,IAAI,CAAY;YAChB,UAAK,GAAL,KAAK,CAAO;YACZ,YAAO,GAAP,OAAO,CAAS;YAR5B,iBAAY,GAAG,eAAe,CAAC,YAAY,CAAC;QAQZ,CAAC;QAEjC,2BAAK,GAAL;YAAA,iBA6CC;YA5CG,IAAM,UAAU,GAAG,IAAI,+BAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACxF,IAAI,CAAC,aAAa,GAAG,IAAI,8BAAa,CAAC,UAAU,CAAC,CAAC;YAKnD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,eAAe,EAAE,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAA1B,CAA0B,CAAC,CAAC;YAK3E,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAA7B,CAA6B,CAAC,CAAC;YAMjF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAA/B,CAA+B,CAAC,CAAC;YAKrF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAA,YAAY,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAArC,CAAqC,CAAC,CAAC;YAEhG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,UAAA,CAAC;gBAC3B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACJ,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,cAAc,EAAE,CAAC;gBAC1B,CAAC;YACL,CAAC,CAAA;YAGD,MAAM,CAAC,IAAI,OAAO,CAAkB,UAAC,OAAO,EAAE,MAAM;gBAChD,KAAI,CAAC,aAAa,CAAC,KAAK,EAAE;qBACrB,IAAI,CAAC;oBACF,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;oBACnD,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;gBACvC,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK;oBACR,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA;oBAC9C,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC;QAED,0BAAI,GAAJ;YACI,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC9B,CAAC;QAEO,wCAAkB,GAA1B,UAA2B,eAAgC;YACvD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,eAAe,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC;YACX,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,eAAe,CAAC,CAAC;YAC/D,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;YACpC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,+CAAsB,CAAC,eAAe,CAAC,CAAC,CAAC;QACjE,CAAC;QAEO,mCAAa,GAArB;YACI,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QACvD,CAAC;QAEO,oCAAc,GAAtB;YACI,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAC1D,CAAC;QAEO,6BAAO,GAAf,UAAgB,KAAU;YACtB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACnD,CAAC;QAEO,qCAAe,GAAvB,UAAwB,IAAU;YAC9B,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YACvD,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,6BAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,CAAC;QAEO,wCAAkB,GAA1B,UAA2B,IAAkB;YACzC,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YACtD,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,mCAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;YAChD,CAAC;QACL,CAAC;QAEO,uCAAiB,GAAzB,UAA0B,OAAgB;YACtC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,iCAAe,CAAC,OAAO,CAAC,CAAC,CAAC;QAClD,CAAC;QAEO,wCAAkB,GAA1B,UAA2B,YAA0B;YACjD,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,uCAAkB,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1D,CAAC;QAvGQ,WAAW;YADvB,8BAAU;6CAMuB,mBAAQ;gBACtB,0CAAe;gBACb,gCAAU;gBACT,aAAK;gBACH,iBAAO;WATnB,WAAW,CAwGvB;QAAD,kBAAC;KAxGD,AAwGC,IAAA;IAxGY,kCAAW;;;;;;;;;;;;;;;IClBxB;QAOI,aAAoB,EAAmB,EAC3B,KAAY,EACZ,OAAgB,EACxB,QAAkB,EAClB,IAAgB;YAJA,OAAE,GAAF,EAAE,CAAiB;YAC3B,UAAK,GAAL,KAAK,CAAO;YACZ,YAAO,GAAP,OAAO,CAAS;YAGxB,QAAQ,CAAC,UAAU,GAAG,qBAAW,CAAC,UAAU,CAAC;YAC7C,IAAI,CAAC,SAAS,CACV,UAAA,OAAO,IAAI,OAAA,OAAO;iBACb,WAAW,CAAC,qBAAW,CAAC,UAAU,CAAC;iBACnC,eAAe,CAAC,IAAI,CAAC,EAFf,CAEe,CAAC,CAAC;YAEhC,KAAK,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACpD,IAAI,CAAC,UAAU,GAAG,qBAAW,CAAC,YAAY,CAAC;QAC/C,CAAC;QAED,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YAA3D,iBA6CC;YA5CG,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;YACxB,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;YACnD,IAAM,OAAO,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;YACpH,IAAM,KAAK,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;YAC1G,IAAM,OAAO,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;YACnG,IAAM,IAAI,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;YAEpF,MAAM,CAAC,GAAG,CAAC;gBACP,IAAI;gBACJ,OAAO;gBACP,OAAO;gBACP,KAAK;aACR,CAAC,CAAC;YAEH,IAAI,mBAAmB,GAAG,UAAC,WAAkC;gBACzD,IAAM,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAEnD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACX,MAAM,CAAC,OAAO,CAAC;gBACnB,CAAC;gBAED,IAAM,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBACnD,IAAM,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAEjD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACX,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBAC/B,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;gBACjD,CAAC;gBAED,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;gBAE7C,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACvB,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAED,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,OAAO,CAAC;gBACnB,CAAC;gBAED,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC,CAAA;YAED,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAA;YAC5C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC;QAED,sBAAQ,GAAR;YAAA,iBAKC;YAJG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,+CAAsB,EAAE,UAAA,CAAC;gBACvC,KAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC;QAED,oBAAM,GAAN;YACI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC;QAED,oBAAM,GAAN;YACI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC;QAED,kBAAI,GAAJ;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACxC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YACzC,CAAC;QACL,CAAC;QAEO,4BAAc,GAAtB;YACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS;mBAC7C,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI;mBAC3B,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,IAAI,eAAe,CAAC;YAEzE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxC,CAAC;QAlGQ,GAAG;YADf,8BAAU;6CAQiB,0CAAe;gBACpB,aAAK;gBACH,iBAAO;gBACd,mBAAQ;gBACZ,gCAAU;WAXX,GAAG,CAoGf;QAAD,UAAC;KApGD,AAoGC,IAAA;IApGY,kBAAG;IAuGhB;QAEI,uBAAoB,KAAY,EAAU,OAAgB;YAAtC,UAAK,GAAL,KAAK,CAAO;YAAU,YAAO,GAAP,OAAO,CAAS;QAAI,CAAC;QAE/D,2BAAG,GAAH,UAAI,qBAA4C,EAAE,IAAU;YACxD,EAAE,CAAC,CAAC,qBAAqB,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,UAAA,CAAC;gBACjD,IAAI,KAAK,GAAG,CAAC,CAAC,MAA2B,CAAC;gBAC1C,MAAM,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC,CAAC;gBACD,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBACrC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACd,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,yBAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC9C,CAAC;YACL,CAAC;YAED,MAAM,CAAC,IAAI,EAAE,CAAC;QAClB,CAAC;QAhBC,aAAa;YADlB,8BAAU;6CAGoB,aAAK,EAAmB,iBAAO;WAFxD,aAAa,CAiBlB;QAAD,oBAAC;KAjBD,AAiBC,IAAA;;;;;;ICrID,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QACpB,8BAAU,CAAC,WAAW,CAAC,IAAI,yCAAe,EAAE,CAAC,CAAC;QAC9C,8BAAU,CAAC,QAAQ,CAAC,8BAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAIK,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC;aACpB,MAAM,CAAC,oBAAoB,CAAC,CAAC;QAEhC,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAfD,8BAeC;;;;;;;;;;;;;;;ICvBD;QAEI,qBAAoB,IAAgB,EACxB,QAAkB,EAClB,KAAY;YAFJ,SAAI,GAAJ,IAAI,CAAY;YACxB,aAAQ,GAAR,QAAQ,CAAU;YAClB,UAAK,GAAL,KAAK,CAAO;QAAI,CAAC;QAE7B,8BAAQ,GAAR;YAAA,iBAWC;YAVG,MAAM,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;gBACvC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;qBAC/B,IAAI,CAAC,UAAA,QAAQ;oBACN,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;oBAC5B,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACrB,OAAO,CAAS,IAAI,CAAC,KAAK,CAAC,CAAC;oBAChC,CAAC;gBACL,CAAC,CAAC;qBACL,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QAjBQ,WAAW;YADvB,8BAAU;6CAGmB,gCAAU;gBACd,mBAAQ;gBACX,aAAK;WAJf,WAAW,CAkBvB;QAAD,kBAAC;KAlBD,AAkBC,IAAA;IAlBY,kCAAW;;;;;;;;;;;;;;;ICIxB;QAOI,qBAAoB,WAAwB,EAChC,WAAwB,EACxB,EAAmB;YAFX,gBAAW,GAAX,WAAW,CAAa;YAChC,gBAAW,GAAX,WAAW,CAAa;YACxB,OAAE,GAAF,EAAE,CAAiB;YAP/B,mBAAc,GAAG,YAAY,CAAC;QAOK,CAAC;QAEpC,8BAAQ,GAAR;YAAA,iBAUC;YATG,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,+CAAsB,EAAE,UAAA,CAAC;gBAChF,EAAE,CAAC,CAA0B,CAAE,CAAC,KAAK,KAAK,8BAAe,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClE,KAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,KAAK,8BAAe,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC;QACL,CAAC;QAED,8BAAQ,GAAR;YACI,IAAI,CAAC,iCAAiC,CAAC,OAAO,EAAE,CAAC;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,CAAC;YAC7C,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,CAAC;YAChD,CAAC;QACL,CAAC;QAEO,6BAAO,GAAf;YAAA,iBAgBC;YAfG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;iBACtB,IAAI,CAAC,UAAA,KAAK;gBACP,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBAEnB,KAAI,CAAC,yBAAyB,GAAG,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,6BAAa,EAAE,UAAA,CAAC;oBAC/D,IAAI,aAAa,GAAkB,CAAC,CAAC;oBACrC,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACvC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAC3C,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,4BAA4B,GAAG,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,mCAAgB,EAAE,UAAA,CAAC;oBACrE,KAAI,CAAC,UAAU,CAAoB,CAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAW,IAAK,OAAA,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC,OAAO,EAAnC,CAAmC,CAAC,CAAC;QACrE,CAAC;QAEO,gCAAU,GAAlB,UAAmB,EAAU;YACzB,IAAI,IAAU,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;gBAChB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;oBACd,IAAI,GAAG,CAAC,CAAC;gBACb,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAChC,CAAC;QACL,CAAC;QA/DQ,WAAW;YADvB,8BAAU;6CAQ0B,0BAAW;gBACnB,0BAAW;gBACpB,0CAAe;WATtB,WAAW,CAgEvB;QAAD,kBAAC;KAhED,AAgEC,IAAA;IAhEY,kCAAW;;;;;;ICXxB;QACI,8BAAmB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;QAAI,CAAC;QACtD,2BAAC;IAAD,CAFA,AAEC,IAAA;IAFY,oDAAoB;;;;;;;;;;;;;;;ICejC;QAGI,6BAAoB,IAAgB,EACxB,QAAkB,EAClB,KAAY,EACZ,OAAgB,EAChB,EAAmB;YAJX,SAAI,GAAJ,IAAI,CAAY;YACxB,aAAQ,GAAR,QAAQ,CAAU;YAClB,UAAK,GAAL,KAAK,CAAO;YACZ,YAAO,GAAP,OAAO,CAAS;YAChB,OAAE,GAAF,EAAE,CAAiB;QAAI,CAAC;QAEpC,8CAAgB,GAAhB,UAAiB,YAA0B,EAAE,MAAc;YACvD,EAAE,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,QAAQ,KAAK,eAAe,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9E,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC;gBACxC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;gBAC/C,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,2CAAoB,CAAC,YAAY,CAAC,CAAC,CAAC;gBACxD,MAAM,CAAC,eAAe,CAAC,cAAc,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;YACvE,CAAC;QACL,CAAC;QAED,yCAAW,GAAX,UAAY,YAA0B,EAAE,OAAe;YAAvD,iBAyCC;YAxCG,IAAI,CAAC,GAAG,IAAI,iBAAO,EAAE,CAAC;YACtB,CAAC,CAAC,cAAc,GAAG,YAAY,CAAC,EAAE,CAAC;YACnC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC7B,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC;YAEjB,EAAE,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;oBACxC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;wBAClC,EAAE,EAAE,YAAY,CAAC,EAAE;wBACnB,IAAI,EAAE,OAAO;qBAChB,CAAC;yBACG,IAAI,CAAC,UAAA,QAAQ;wBACV,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACjC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACf,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC;gBAC9D,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,UAAkB,CAAC;gBACvB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC;oBAC5B,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnC,UAAQ,GAAG,CAAC,CAAC;oBACjB,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;oBACxC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;wBAClC,EAAE,EAAE,UAAQ,CAAC,MAAM;wBACnB,IAAI,EAAE,OAAO;qBAChB,CAAC;yBACG,IAAI,CACL,UAAA,QAAQ;wBACJ,YAAY,CAAC,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC;wBACnC,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,uCAAkB,CAAC,YAAY,CAAC,CAAC,CAAC;wBACtD,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACjC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACf,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC;gBAC9D,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QAED,8CAAgB,GAAhB;YAAA,iBAkBC;YAjBG,MAAM,CAAC,IAAI,OAAO,CAAiB,UAAC,OAAO,EAAE,MAAM;gBAC/C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;qBAC/B,IAAI,CAAC,UAAA,QAAQ;oBACV,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACpB,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;wBAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;4BACP,IAAI,aAAa,GAAmB,IAAI,CAAC;4BACzC,aAAa,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAnC,CAAmC,CAAC,CAAC;4BAChE,OAAO,CAAC,aAAa,CAAC,CAAC;4BACvB,MAAM,CAAC;wBACX,CAAC;oBACL,CAAC;oBAED,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QA/EQ,mBAAmB;YAD/B,8BAAU;6CAImB,gCAAU;gBACd,mBAAQ;gBACX,aAAK;gBACH,iBAAO;gBACZ,0CAAe;WAPtB,mBAAmB,CAgF/B;QAAD,0BAAC;KAhFD,AAgFC,IAAA;IAhFY,kDAAmB;;;;;;;;;;;;;;;ICJhC;QAKI,iBAAoB,OAA4B,EACpC,KAAY,EACZ,EAAmB,EACnB,MAAc;YAHN,YAAO,GAAP,OAAO,CAAqB;YACpC,UAAK,GAAL,KAAK,CAAO;YACZ,OAAE,GAAF,EAAE,CAAiB;YACnB,WAAM,GAAN,MAAM,CAAQ;QAAI,CAAC;QAE/B,sBAAI,kCAAa;iBAAjB;gBACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAED,wBAAM,GAAN;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,2BAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzD,CAAC;YAED,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACvE,CAAC;QAED,0BAAQ,GAAR;YAAA,iBAcC;YAbG,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,2CAAoB,EAAE,UAAA,CAAC;gBAC7E,IAAI,IAAI,GAAG,CAAC,CAAC,YAA4B,CAAC;gBAC1C,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAE/B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvB,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC;wBACf,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,KAAK,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;4BAChE,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,CAAA;gBACN,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,0BAAQ,GAAR;YACI,IAAI,CAAC,gCAAgC,CAAC,OAAO,EAAE,CAAC;QACpD,CAAC;QA3CS;YAAT,4BAAQ;sCAAO,WAAI;6CAAC;QADZ,OAAO;YADnB,8BAAU;6CAMsB,0CAAmB;gBAC7B,aAAK;gBACR,0CAAe;gBACX,uBAAM;WARjB,OAAO,CA6CnB;QAAD,cAAC;KA7CD,AA6CC,IAAA;IA7CY,0BAAO;;;;;;;;;;;;;;;ICNpB;QAKI,+BAAoB,OAA4B,EAAU,MAAc;YAApD,YAAO,GAAP,OAAO,CAAqB;YAAU,WAAM,GAAN,MAAM,CAAQ;QACxE,CAAC;QAED,wCAAQ,GAAR,UAAS,MAAM,EAAE,WAAW;YACxB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAEhB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,SAAS,CAAC;YACjD,CAAC;YAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;YAErD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACxC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC3D,CAAC;QACL,CAAC;QAED,2CAAW,GAAX;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACzD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,KAAK,GAAG,2BAA2B,CAAC;YAC7C,CAAC;YAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACtB,CAAC;QAhCQ,qBAAqB;YADjC,8BAAU;6CAMsB,0CAAmB,EAAkB,uBAAM;WAL/D,qBAAqB,CAiCjC;QAAD,4BAAC;KAjCD,AAiCC,IAAA;IAjCY,sDAAqB;;;;;;ICLlC;QACI,6BAAmB,OAAgB;YAAhB,YAAO,GAAP,OAAO,CAAS;QAAI,CAAC;QAC5C,0BAAC;IAAD,CAFA,AAEC,IAAA;IAFY,kDAAmB;;;;;;;;;;;;;;;ICahC;QAOE,0BAAoB,OAA4B,EACtC,KAAY,EACZ,EAAmB,EACnB,MAAc;YAHJ,YAAO,GAAP,OAAO,CAAqB;YACtC,UAAK,GAAL,KAAK,CAAO;YACZ,OAAE,GAAF,EAAE,CAAiB;YACnB,WAAM,GAAN,MAAM,CAAQ;QAAI,CAAC;QAE7B,mCAAQ,GAAR;YAAA,iBAuBC;YAtBC,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAgB,CAAC;YAE/C,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,+CAAsB,EAAE,UAAA,CAAC;gBAC5E,IAAI,KAAK,GAA4B,CAAE,CAAC,KAAK,CAAC;gBAC9C,EAAE,CAAC,CAAC,KAAK,KAAK,8BAAe,CAAC,YAAY,CAAC,CAAC,CAAC;oBAE3C,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBACvD,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,8BAAe,CAAC,SAAS,CAAC,CAAC,CAAC;oBAE/C,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,yCAAmB,EAAE,UAAA,CAAC;gBAC7E,IAAM,OAAO,GAAyB,CAAE,CAAC,OAAO,CAAC;gBACjD,IAAM,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,cAAc,EAA/B,CAA+B,CAAC,CAAC;gBACnF,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,mCAAQ,GAAR;YACE,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC7C,CAAC;QAEO,sCAAW,GAAnB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,8BAA8B,CAAC,OAAO,EAAE,CAAC;YAChD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,CAAC;YAC9C,CAAC;QACH,CAAC;QAEO,2CAAgB,GAAxB;YAAA,iBA6CC;YA5CC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;iBAC5B,IAAI,CAAC,UAAA,aAAa;gBAEjB,KAAI,CAAC,WAAW,EAAE,CAAC;gBAEnB,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;oBACnB,MAAM,CAAC;gBACT,CAAC;gBACD,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;gBAEnC,KAAI,CAAC,4BAA4B,GAAG,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,mCAAgB,EAAE,UAAA,CAAC;oBACvE,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,CAAC;wBAC1B,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;wBAE5B,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC;4BACjB,IAAI,IAAI,GAAsB,CAAE,CAAC,IAAI,CAAC;4BACtC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gCAE3C,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oCAC3B,IAAM,KAAK,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oCAC5C,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oCAEpC,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,mBAAmB,KAAK,CAAC,CAAC,CAAC,CAAC;wCAC3C,KAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,SAAS,CAAC;oCAC/C,CAAC;gCACH,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACN,IAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oCACnC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oCAE3B,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,mBAAmB,KAAK,CAAC,CAAC,CAAC,CAAC;wCAC3C,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;wCACpB,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;oCAChD,CAAC;gCACH,CAAC;4BACH,CAAC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,8BAA8B,GAAG,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,uCAAkB,EAAE,UAAA,CAAC;oBAC3E,IAAM,YAAY,GAAwB,CAAE,CAAC,YAAY,CAAC;oBAC1D,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAhGU,gBAAgB;YAD5B,8BAAU;6CAQoB,0CAAmB;gBAC/B,aAAK;gBACR,0CAAe;gBACX,uBAAM;WAVb,gBAAgB,CAiG5B;QAAD,uBAAC;KAjGD,AAiGC,IAAA;IAjGY,4CAAgB;;;;;;;;;;;;;;;ICJ7B;QAQI,6BAAoB,OAA4B,EAAU,EAAmB,EAAU,MAAc;YAAjF,YAAO,GAAP,OAAO,CAAqB;YAAU,OAAE,GAAF,EAAE,CAAiB;YAAU,WAAM,GAAN,MAAM,CAAQ;QAAI,CAAC;QAE1G,oCAAM,GAAN;YACI,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAClE,CAAC;QAED,sCAAQ,GAAR;YAAA,iBAmBC;YAlBG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC;YAE3E,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,2CAAoB,EAAE,UAAA,CAAC;gBAC7E,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,KAAK,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7C,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC3B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAC5B,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,iCAAe,EAAE,UAAA,CAAC;gBACnE,IAAI,OAAO,GAAqB,CAAE,CAAC,OAAO,CAAC;gBAC3C,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,KAAK,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;oBAClD,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBAC5C,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;gBACpC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,sCAAQ,GAAR;YACI,IAAI,CAAC,gCAAgC,CAAC,OAAO,EAAE,CAAC;YAChD,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC/C,CAAC;QArCS;YAAT,4BAAQ;sCAAe,2BAAY;iEAAC;QAD5B,mBAAmB;YAD/B,8BAAU;6CASsB,0CAAmB,EAAc,0CAAe,EAAkB,uBAAM;WAR5F,mBAAmB,CAuC/B;QAAD,0BAAC;KAvCD,AAuCC,IAAA;IAvCY,kDAAmB;;;;;;ICXhC;QAAA;QAGA,CAAC;QAAD,eAAC;IAAD,CAHA,AAGC,IAAA;IAHY,4BAAQ;;;;;;;;;;;;;;;ICWrB;QAGI,sBAAoB,IAAgB,EACxB,QAAkB,EAClB,WAAwB,EACxB,mBAAwC,EACxC,KAAY,EACZ,OAAgB;YALR,SAAI,GAAJ,IAAI,CAAY;YACxB,aAAQ,GAAR,QAAQ,CAAU;YAClB,gBAAW,GAAX,WAAW,CAAa;YACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;YACxC,UAAK,GAAL,KAAK,CAAO;YACZ,YAAO,GAAP,OAAO,CAAS;QAAI,CAAC;QAEjC,8BAAO,GAAP,UAAQ,YAAsB;YAA9B,iBAYC;YAXG,MAAM,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;gBACvC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBACf,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;yBACf,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,EAA7B,CAA6B,CAAC;yBACzC,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;gBAC9D,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACnB,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBAClC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,4BAAK,GAAL,UAAM,QAAgB;YAAtB,iBAYC;YAXG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;YAE1B,MAAM,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;gBACvC,KAAI,CAAC,OAAO,EAAE;qBACT,IAAI,CAAC,UAAA,CAAC;oBACH,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;wBACrB,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;oBACjD,CAAC;gBACL,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;QACP,CAAC;QAED,6BAAM,GAAN;YAAA,iBAgBC;YAfG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC;YACX,CAAC;YAED,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;YAChC,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,GAAG,SAAS,CAAC;YAEzD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAExB,IAAI,CAAC,OAAO,EAAE;iBACT,IAAI,CAAC,UAAA,CAAC;gBACH,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;YAEP,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QAC1B,CAAC;QAED,6BAAM,GAAN,UAAO,QAAQ;YAAf,iBAmBC;YAlBG,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;gBACxC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACZ,OAAO,CAAC,KAAK,CAAC,CAAC;oBACf,MAAM,CAAC;gBACX,CAAC;gBAED,KAAI,CAAC,OAAO,EAAE;qBACT,IAAI,CAAC,UAAA,CAAC;oBACH,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,mBAAmB,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;yBACxF,IAAI,CAAC,UAAA,QAAQ;wBACV,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBAC9B,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,KAAK;wBACR,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;oBACtE,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QAED,8BAAO,GAAP,UAAQ,QAAQ;YAAhB,iBAaC;YAZG,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;gBACxC,KAAI,CAAC,OAAO,EAAE;qBACT,IAAI,CAAC,UAAA,CAAC;oBACH,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,+BAA+B,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;yBAC7F,IAAI,CAAC,UAAA,QAAQ;wBACV,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;wBACvC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;oBACjD,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAA7D,CAA6D,CAAC,CAAC;gBACvF,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QAED,gDAAyB,GAAzB;YAAA,iBAYC;YAXG,MAAM,CAAC,IAAI,OAAO,CAAkB,UAAC,OAAO,EAAE,MAAM;gBAChD,KAAI,CAAC,OAAO,EAAE;qBACT,IAAI,CAAC,UAAA,CAAC;oBACH,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,uBAAuB,CAAC;yBAC7D,IAAI,CAAC,UAAA,QAAQ;wBACV,OAAO,CAAC,QAAQ,CAAC,OAA0B,CAAC,CAAC;oBACjD,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAA7D,CAA6D,CAAC,CAAC;gBACvF,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,8BAAO,GAAf,UAAgB,OAAiB,EAAE,MAAgB;YAAnD,iBAUC;YATG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;iBAChB,IAAI,CAAC,UAAA,CAAC;gBACH,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAA;gBACtB,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAA,OAAO;oBACvB,OAAO,CAAC,UAAU,CAAC,cAAc,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;gBAClD,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;QAClE,CAAC;QAEO,mCAAY,GAApB,UAAqB,QAAQ,EAAE,OAAiB,EAAE,MAAgB;YAAlE,iBAQC;YAPG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,WAAW,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;iBAC1E,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YAC3C,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,KAAK;gBACR,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACX,CAAC;QAEO,6BAAM,GAAd,UAAe,QAAgB,EAAE,OAAiB,EAAE,MAAgB;YAChE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAE/B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAClC,CAAC;QAEO,kCAAW,GAAnB,UAAoB,KAA0B,EAAE,MAAgB,EAAE,SAAgB;YAC9E,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,MAAM,CAAC,SAAS,CAAC,CAAC;QACtB,CAAC;QAzIQ,YAAY;YADxB,8BAAU;6CAImB,gCAAU;gBACd,mBAAQ;gBACL,0BAAW;gBACH,0CAAmB;gBACjC,aAAK;gBACH,iBAAO;WARnB,YAAY,CA0IxB;QAAD,mBAAC;KA1ID,AA0IC,IAAA;IA1IY,oCAAY;;;;;;;;;;;;;;;ICHzB;QAKI,kBAAoB,OAAqB,EAAU,KAAY,EAAE,iBAA8C;YAA3F,YAAO,GAAP,OAAO,CAAc;YAAU,UAAK,GAAL,KAAK,CAAO;YAC3D,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;YAC5D,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,QAAQ,CAAC;QAC/C,CAAC;QAED,2BAAQ,GAAR;YACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxC,CAAC;QAED,oCAAiB,GAAjB,UAAkB,KAAa;YAA/B,iBAQC;YAPG,MAAM,CAAC,IAAI,OAAO,CAAU,UAAA,OAAO;gBAC/B,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;qBACrB,IAAI,CAAC,UAAA,CAAC;oBACH,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;oBACX,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAChC,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAA;QACN,CAAC;QApBD;YADC,4BAAQ,CAAC,EAAE,kBAAkB,EAAE,+BAAW,CAAC,MAAM,EAAE,CAAC;;kDACpC;QAFR,QAAQ;YAFpB,8BAAU;YACV,iCAAa,CAAC,WAAW,CAAC;6CAMM,4BAAY,EAAiB,aAAK,EAAqB,gDAA2B;WALtG,QAAQ,CAuBpB;QAAD,eAAC;KAvBD,AAuBC,IAAA;IAvBY,4BAAQ;IAyBrB,oCAAe;SACV,MAAM,CAAC,UAAC,CAAW,IAAK,OAAA,CAAC,CAAC,QAAQ,EAAV,CAAU,CAAC;SACnC,SAAS,CAAC,UAAC,KAAK,EAAE,GAAG,IAAK,OAAA,GAAG,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAA5B,CAA4B,CAAC;SACvD,WAAW,CAAC,0DAA0D,CAAC;SACvE,aAAa,CAAC,UAAU,CAAC;SACzB,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;;;ICpClB;QAAA;QAIA,CAAC;QAAD,qBAAC;IAAD,CAJA,AAIC,IAAA;IAJY,wCAAc;;;;;;ICF3B;QAAA;QAGA,CAAC;QAAD,oBAAC;IAAD,CAHA,AAGC,IAAA;IAED;QAAA;QAGA,CAAC;QAAD,6CAAC;IAAD,CAHA,AAGC,IAAA;IAHY,wFAAsC;IAKnD;QAAA;QAGA,CAAC;QAAD,mBAAC;IAAD,CAHA,AAGC,IAAA;IAHY,oCAAY;;;;;;;;;;;;;;;ICCzB;QAEI,wBAAoB,IAAgB,EACxB,QAAkB,EAClB,KAAY,EACZ,OAAgB;YAHR,SAAI,GAAJ,IAAI,CAAY;YACxB,aAAQ,GAAR,QAAQ,CAAU;YAClB,UAAK,GAAL,KAAK,CAAO;YACZ,YAAO,GAAP,OAAO,CAAS;QAAI,CAAC;QAEjC,kCAAS,GAAT;YAAA,iBAQC;YAPG,MAAM,CAAC,IAAI,OAAO,CAAe,UAAC,MAAM,EAAE,MAAM;gBAC5C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,SAAS,CAAC;qBAC/C,IAAI,CAAC,UAAA,QAAQ;oBACV,MAAM,CAAC,QAAQ,CAAC,OAAuB,CAAC,CAAC;gBAC7C,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QAED,oCAAW,GAAX,UAAY,aAAqB,EAAE,WAAmB;YAAtD,iBAQC;YAPG,MAAM,CAAC,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;gBACrC,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,gCAAgC,GAAG,kBAAkB,CAAC,aAAa,CAAC,GAAG,eAAe,GAAG,kBAAkB,CAAC,WAAW,CAAC,CAAC;qBACjK,IAAI,CAAC;oBACF,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAhC,CAAgC,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;QACP,CAAC;QAzBQ,cAAc;YAD1B,8BAAU;6CAGmB,gCAAU;gBACd,mBAAQ;gBACX,aAAK;gBACH,iBAAO;WALnB,cAAc,CA0B1B;QAAD,qBAAC;KA1BD,AA0BC,IAAA;IA1BY,wCAAc;;;;;;;;;;;;;;;ICI3B;QAQI,iBAAoB,cAA8B,EAClC,YAA0B,EAC1B,MAAc,EACd,EAAmB,EACnB,KAAY,EACpB,QAAkB,EAClB,OAAgB;YANJ,mBAAc,GAAd,cAAc,CAAgB;YAClC,iBAAY,GAAZ,YAAY,CAAc;YAC1B,WAAM,GAAN,MAAM,CAAQ;YACd,OAAE,GAAF,EAAE,CAAiB;YACnB,UAAK,GAAL,KAAK,CAAO;YAGxB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,UAAU;gBACxC,QAAQ,CAAC,WAAW;gBACpB,uBAAuB;gBACvB,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,eAAe,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjI,CAAC;QAED,wBAAM,GAAN,UAAO,aAAqB,EAAE,WAAmB;YAAjD,iBAYC;YAXG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC;iBACtD,IAAI,CAAC;gBACF,IAAI,aAAa,GAAG,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC9C,IAAM,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,aAAa,KAAK,aAAa,IAAI,KAAK,CAAC,WAAW,KAAK,WAAW,EAA1E,CAA0E,CAAC,CAAC;gBAC3H,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAE/B,IAAM,QAAQ,GAAG,IAAI,sDAAsC,EAAE,CAAC;gBAC9D,QAAQ,CAAC,oBAAoB,GAAG,QAAQ,CAAC,WAAW,GAAG,aAAa,CAAC;gBACrE,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YAC1C,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC,OAAO,EAA7B,CAA6B,CAAC,CAAC;QAC5D,CAAC;QAED,0BAAQ,GAAR;YAAA,iBAQC;YAPG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,+CAAsB,EAAE,UAAA,CAAC;gBAC1E,EAAE,CAAC,CAA0B,CAAE,CAAC,KAAK,KAAK,8BAAe,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClE,KAAI,CAAC,SAAS,EAAE,CAAC;gBACrB,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;QAED,0BAAQ,GAAR;YACI,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC/C,CAAC;QAEO,2BAAS,GAAjB;YAAA,iBASC;YARG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;iBACtB,IAAI,CAAC,UAAC,KAAa;gBACZ,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE;qBAC1B,IAAI,CAAC,UAAC,MAAoB,IAAK,OAAA,KAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC;qBACpD,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC,OAAO,EAA7B,CAA6B,CAAC,CAAC;YAC5D,CAAC,CAAC;iBACL,KAAK,CAAC,UAAC,CAAQ,IAAK,OAAA,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC,OAAO,EAA7B,CAA6B,CAAC,CAAC;QAC5D,CAAC;QA1DQ,OAAO;YADnB,8BAAU;6CAS6B,gCAAc;gBACpB,4BAAY;gBAClB,uBAAM;gBACV,0CAAe;gBACZ,aAAK;gBACV,mBAAQ;gBACT,iBAAO;WAdf,OAAO,CA2DnB;QAAD,cAAC;KA3DD,AA2DC,IAAA;IA3DY,0BAAO;;;;;;;;;;;;;;;ICNpB;QAKI,iBAAoB,OAAqB,EAC7B,MAAc,EACd,OAAgB,EAChB,KAAY,EACpB,iBAA8C;YAJ9B,YAAO,GAAP,OAAO,CAAc;YAC7B,WAAM,GAAN,MAAM,CAAQ;YACd,YAAO,GAAP,OAAO,CAAS;YAChB,UAAK,GAAL,KAAK,CAAO;YAEpB,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;YAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAClD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAEnD,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACjD,CAAC;QAED,yBAAO,GAAP;YAAA,iBAgBC;YAfG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;iBACrB,IAAI,CAAC;gBACF,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;qBACpC,IAAI,CAAC;oBACF,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBACxC,CAAC,CAAC;qBACD,KAAK,CAAC,UAAC,CAAQ;oBACZ,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;wBACxB,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;oBACzC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACnB,CAAC;gBACL,CAAC,CAAC,CAAC;YACX,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,CAAC,EAAd,CAAc,CAAC,CAAC;QACpC,CAAC;QAjCQ,OAAO;YADnB,8BAAU;6CAMsB,4BAAY;gBACrB,uBAAM;gBACL,iBAAO;gBACT,aAAK;gBACD,gDAA2B;WATzC,OAAO,CAkCnB;QAAD,cAAC;KAlCD,AAkCC,IAAA;IAlCY,0BAAO;;;;;;ICyCpB;QAII,6BAAoB,EAAmB;YAAnB,OAAE,GAAF,EAAE,CAAiB;QAAI,CAAC;QAE5C,mCAAK,GAAL;YAAA,iBAcC;YAbG,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBACzB,EAAE,CAAC,CAAC,YAAY,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC9C,YAAY;yBACP,iBAAiB,EAAE;yBACnB,IAAI,CAAC,UAAA,UAAU;wBACZ,EAAE,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;4BAC3B,KAAI,CAAC,MAAM,EAAE,CAAC;wBAClB,CAAC;oBACL,CAAC,CAAC,CAAC;gBACX,CAAC;YACL,CAAC;QACL,CAAC;QAED,kCAAI,GAAJ;YACI,EAAE,CAAA,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;YACvC,CAAC;YACD,EAAE,CAAA,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAC;YAC5C,CAAC;QACL,CAAC;QAEO,oCAAM,GAAd;YAAA,iBAYC;YAXG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,iCAAe,EAAE,UAAA,CAAC;gBAC3D,KAAI,CAAC,MAAM,CAAmB,CAAE,CAAC,OAAO,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,uCAAkB,EAAE,UAAA,CAAC;gBACnE,IAAM,YAAY,GAAwB,CAAE,CAAC,YAAY,CAAC;gBAC1D,IAAM,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACV,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACzB,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,oCAAM,GAAd,UAAe,OAAgB;YAA/B,iBAaC;YAZG,IAAM,MAAM,GAAG;gBACP,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,IAAI,EAAE,aAAa;aACtB,CAAC;YAEN,IAAM,CAAC,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAC7C,CAAC,CAAC,OAAO,GAAG;gBACR,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,yCAAmB,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClD,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC,CAAC;YAEN,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC;QACL,0BAAC;IAAD,CA3DA,AA2DC,IAAA;IA3DY,kDAAmB;;;;;;;;;;;;;;;ICxChC;QAQI,cAAoB,WAAwB,EAChC,EAAmB;YADX,gBAAW,GAAX,WAAW,CAAa;YAChC,OAAE,GAAF,EAAE,CAAiB;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,0CAAmB,CAAC,EAAE,CAAC,CAAC;QACpD,CAAC;QAEL,8BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACvD,MAAM,CAAC,GAAG,CAAC;gBACP,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAkB,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,sCAAsC,EAAE;aAC9G,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC;QAED,uBAAQ,GAAR;YAAA,iBAUC;YATG,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,+CAAsB,EAAE,UAAA,CAAC;gBAC1E,KAAI,CAAC,iBAAiB,CAA0B,CAAE,CAAC,KAAK,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YAEtD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,KAAK,8BAAe,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAC7B,CAAC;QACL,CAAC;QAED,uBAAQ,GAAR;YACI,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC/C,CAAC;QAEO,gCAAiB,GAAzB,UAA0B,KAAsB;YAC5C,EAAE,CAAC,CAAC,KAAK,KAAK,8BAAe,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBACrC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC7B,CAAC;YAAC,EAAE,CAAC,CAAC,KAAK,KAAK,8BAAe,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC9B,CAAC;QACL,CAAC;QAhDQ,IAAI;YADhB,8BAAU;6CAS0B,0BAAW;gBAC5B,0CAAe;WATtB,IAAI,CAiDhB;QAAD,WAAC;KAjDD,AAiDC,IAAA;IAjDY,oBAAI;;;;;;;;;;;;;;;ICAjB;QAMI,eAAoB,OAAqB,EAAU,MAAc,EAAU,KAAY,EAAE,QAAkB;YAAvF,YAAO,GAAP,OAAO,CAAc;YAAU,WAAM,GAAN,MAAM,CAAQ;YAAU,UAAK,GAAL,KAAK,CAAO;YACnF,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAC/B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,UAAU;gBACpC,QAAQ,CAAC,WAAW;gBACpB,2BAA2B;gBAC3B,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,qBAAW,CAAC,YAAY,CAAC,CAAC;QAChG,CAAC;QAED,qBAAK,GAAL;YAAA,iBAQC;YAPG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;iBAClC,IAAI,CAAC;gBACF,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACxC,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAY;gBAChB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,CAAC,CAAC,CAAC;QACX,CAAC;QAED,wBAAQ,GAAR;YAAA,iBAWC;YAVG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;iBACrB,IAAI,CAAC,UAAA,CAAC;gBACH,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,KAAI,CAAC,OAAO,CAAC,yBAAyB,EAAE;qBACnC,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,KAAI,CAAC,SAAS,GAAG,SAAS,EAA1B,CAA0B,CAAC;qBAC7C,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,CAAC,EAAd,CAAc,CAAC,CAAC;YACpC,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,OAAA,KAAI,CAAC,KAAK,GAAG,CAAC;YAAd,CAAc,CAAC,CAAC;QAC5B,CAAC;QAnCQ,KAAK;YADjB,8BAAU;6CAOsB,4BAAY,EAAkB,uBAAM,EAAiB,aAAK,EAAY,mBAAQ;WANlG,KAAK,CAsCjB;QAAD,YAAC;KAtCD,AAsCC,IAAA;IAtCY,sBAAK;;;;;;ICRlB,mBAA0B,MAA8B;IAExuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzhYA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["export default {\r\n  debug: true,\r\n  testing: true,\r\n  apiBaseUrl: 'http://localhost:5000',\r\n  redirectPath: ''\r\n};\r\n","export class Settings {\r\n    apiBaseUrl = 'http://localhost:5000';\r\n    userAPI = '/api/users';\r\n    convAPI = '/api/chat/conv';\r\n    chatAPI = '/api/chat';\r\n    accountdAPI = \"/account\";\r\n}","/**\r\n * Manage connected user state\r\n */\r\nexport class State {\r\n    userName: string;\r\n    isGuess: boolean;\r\n}","class Key {\r\n    IDBCursorWithValue: string;\r\n}\r\n\r\nclass ErrorMessage {\r\n    errorMessage: string;\r\n}\r\n\r\nexport class ServiceError {\r\n    key: string;\r\n    subKey: Key;\r\n    errors: Array<ErrorMessage>;\r\n}\r\n\r\n","export class Attendee {\r\n    constructor(public userId?: string) { }\r\n}","export class Message {\r\n    conversationId: string;\r\n    from: string;\r\n    text: string;\r\n    date: Date;\r\n}","import { Conversation } from './conversation';\r\n\r\nexport class User {\r\n    id: string;\r\n    name: string;\r\n    conversation: Conversation;\r\n}","import { Attendee } from './attendee';\r\nimport { Message } from './message';\r\nimport { User } from './user';\r\n\r\nexport class Conversation {\r\n    id: string;\r\n    title: string;\r\n    attendees: Attendee[];\r\n    messages: Message[];\r\n    isInitiatedByUser: boolean;\r\n\r\n    constructor(user?: User) {\r\n        if (!user) {\r\n            return;\r\n        }\r\n        \r\n        let attendees = new Array<Attendee>();\r\n        attendees.push(new Attendee(user.id));\r\n        this.attendees = attendees;\r\n        this.messages = new Array<Message>();\r\n        this.isInitiatedByUser = true;\r\n    }\r\n}","import { autoinject } from 'aurelia-framework';\r\n\r\nimport { State } from './state'\r\n\r\nimport { ServiceError } from '../model/serviceError';\r\nimport { Conversation } from '../model/conversation';\r\n\r\n@autoinject\r\nexport class Helpers {\r\n    location: Location;\r\n    constructor(private state: State) {\r\n        this.location = window.location;\r\n     }\r\n\r\n    getError(error: any) : Error {\r\n        let errors = <ServiceError[]> error.content;\r\n        let se = errors[0];\r\n        let e = new Error(se.errors[0].errorMessage);\r\n        e.name = se.key;\r\n        return e;\r\n    }\r\n\r\n     setConverationTitle(conversation: Conversation) {\r\n        if (conversation.title) {\r\n            return;\r\n        }\r\n\r\n        let title = '';\r\n        conversation.attendees.forEach(attendee => {\r\n            if (attendee && attendee.userId && attendee.userId !== this.state.userName) {\r\n                title += attendee.userId + ' ';\r\n            }\r\n        });\r\n        conversation.title = title.trim();\r\n    }\r\n\r\n    getUrlParameter(name): string {\r\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n        var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\r\n        var results = regex.exec(this.location.search);\r\n        return results === null ? undefined : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n    }\r\n}","import { ConnectionState } from '../services/chat.service';\r\n\r\nexport class ConnectionStateChanged {\r\n    constructor(public state: ConnectionState) { }\r\n}","import { Conversation } from '../model/conversation';\r\n\r\nexport class ConversationJoined {\r\n    constructor(public conversation: Conversation) { }\r\n}","import { Message } from '../model/message';\r\n\r\nexport class MessageReceived {\r\n    constructor(public message: Message) { }\r\n}","import { User } from '../model/user';\r\n\r\nexport class UserConnected {\r\n    constructor(public user: User) { }\r\n}","import { Disconnected } from '../services/chat.service'\r\nexport class UserDisconnected {\r\n    constructor(public user: Disconnected) { }\r\n}","import { EventAggregator } from 'aurelia-event-aggregator';\nimport { HttpClient } from 'aurelia-http-client';\nimport { autoinject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { HubConnection, HttpConnection } from 'signalr-client';\n\nimport environment from '../environment';\n\nimport { Settings } from '../config/settings';\nimport { Helpers } from './helpers';\nimport { State } from './state';\n\nimport { User } from '../model/user';\nimport { Message } from '../model/message';\nimport { Conversation } from '../model/conversation';\n\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\nimport { ConversationJoined } from '../events/conversationJoined';\nimport { MessageReceived } from '../events/messageReceived';\nimport { UserConnected } from '../events/userConnected';\nimport { UserDisconnected } from '../events/userDisconnected';\nimport { ServiceError } from '../model/serviceError';\n\nexport interface Disconnected {\n    id: string;\n    isRemoved: boolean\n}\n\nexport enum ConnectionState {  \n    Connected = 1,\n    Disconnected = 2,\n    Error = 3\n}\n\n@autoinject\nexport class ChatService {\n    currentState = ConnectionState.Disconnected;    \n    currentConversation: Conversation;\n\n    private hubConnection: HubConnection;\n    constructor(private settings: Settings, \n        private ea: EventAggregator, \n        private http: HttpClient, \n        private state: State, \n        private helpers: Helpers) { }\n    \n    start(): Promise<ConnectionState> {\n        const connection = new HttpConnection(this.settings.apiBaseUrl + this.settings.chatAPI);\n        this.hubConnection = new HubConnection(connection);\n        /**\n          * @desc callback when a new user connect to the chat\n          * @param User user, the connected user\n        */\n        this.hubConnection.on('userConnected', user => this.onUserConnected(user));\n        /**\n          * @desc callback when a new user disconnect the chat\n          * @param id, the disconnected user id\n        */\n        this.hubConnection.on('userDisconnected', user => this.onUserDisconnected(user));\n        /**\n          * @desc callback when a message is received\n          * @param String to, the conversation id\n          * @param Message data, the message\n        */\n        this.hubConnection.on('messageReceived', message => this.onMessageReceived(message));\n        /**\n          * @desc callback when a new conversation is create on server\n          * @param Conv data, the conversation model\n        */\n        this.hubConnection.on('messageReceived', conversation => this.onJoinConversation(conversation));\n\n        this.hubConnection.onClosed = e => {\n            if (e) {\n                this.onError(e);\n            } else {\n                this.onDisconnected();\n            }\n        }\n    \n        // start the connection\n        return new Promise<ConnectionState>((resolve, reject) => {\n            this.hubConnection.start()\n                .then(() => { \n                    this.setConnectionState(ConnectionState.Connected);\n                    resolve(ConnectionState.Connected);\n                })\n                .catch(error => {\n                    this.setConnectionState(ConnectionState.Error)\n                    reject(new Error(error));\n                });\n        });\n    }\n\n    stop() {\n        this.hubConnection.stop();\n    }\n\n    private setConnectionState(connectionState: ConnectionState) {\n        if (this.currentState === connectionState) {\n            return;\n        }\n        \n        console.log('connection state changed to: ' + connectionState);\n        this.currentState = connectionState;\n        this.ea.publish(new ConnectionStateChanged(connectionState));\n    }\n       \n    private onReconnected() {\n        this.setConnectionState(ConnectionState.Connected);\n    }\n\n    private onDisconnected() {\n        this.setConnectionState(ConnectionState.Disconnected);\n    }\n\n    private onError(error: any) {\n        this.setConnectionState(ConnectionState.Error);\n    }\n\n    private onUserConnected(user: User) {\n        console.log(\"Chat Hub new user connected: \" + user.id);\n        this.ea.publish(new UserConnected(user));\n    }\n\n    private onUserDisconnected(user: Disconnected) {\n        console.log(\"Chat Hub user disconnected: \" + user.id);\n        if (user.id !== this.state.userName) {\n            this.ea.publish(new UserDisconnected(user));\n        }\n    }   \n\n    private onMessageReceived(message: Message) {\n        this.ea.publish(new MessageReceived(message));\n    }\n\n    private onJoinConversation(conversation: Conversation) {\n        this.helpers.setConverationTitle(conversation);\n        this.ea.publish(new ConversationJoined(conversation));\n    }\n}\n","import { autoinject } from 'aurelia-framework';\r\nimport { Router, Redirect, NavigationInstruction, RouterConfiguration, Next, RouteConfig } from 'aurelia-router';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport environment from './environment';\r\n\r\nimport { ConnectionState } from './services/chat.service';\r\nimport { State } from './services/state';\r\nimport { ConnectionStateChanged } from './events/connectionStateChanged';\r\nimport { Settings } from './config/settings';\r\nimport { Helpers } from './services/helpers';\r\n\r\ninterface CustomRouteConfig extends RouteConfig {\r\n    anomymous: boolean;\r\n}\r\n\r\n@autoinject\r\nexport class App {\r\n    router: Router;\r\n    isConnected: boolean;\r\n    userName: string;\r\n    errorMessage: string;\r\n    sourcePath: string;\r\n\r\n    constructor(private ea: EventAggregator,\r\n        private state: State,\r\n        private helpers: Helpers,\r\n        settings: Settings,\r\n        http: HttpClient) {\r\n        settings.apiBaseUrl = environment.apiBaseUrl;\r\n        http.configure(\r\n            builder => builder\r\n                .withBaseUrl(environment.apiBaseUrl)\r\n                .withCredentials(true));\r\n\r\n        state.userName = sessionStorage.getItem('userName');\r\n        this.sourcePath = environment.redirectPath;\r\n    }\r\n\r\n    configureRouter(config: RouterConfiguration, router: Router) {\r\n        config.title = 'Chatle';        \r\n        config.addPipelineStep('authorize', AuthorizeStep);\r\n        const confirm = { route: 'confirm', name: 'confirm', moduleId: 'pages/confirm', title: 'Confirm', anomymous: true };\r\n        const login = { route: 'login', name: 'login', moduleId: 'pages/login', title: 'Login', anomymous: true };\r\n        const account = { route: 'account', name: 'account', moduleId: 'pages/account', title: 'Account' };\r\n        const home = { route: 'home', name: 'home', moduleId: 'pages/home', title: 'Home' }; \r\n\r\n        config.map([\r\n            home,\r\n            account,\r\n            confirm,\r\n            login\r\n        ]);\r\n\r\n        let handleUnknownRoutes = (instruction: NavigationInstruction): RouteConfig => {\r\n            const provider = this.helpers.getUrlParameter('p');\r\n\r\n            if (provider) {\r\n                return confirm;\r\n            }\r\n\r\n            const userName = this.helpers.getUrlParameter('u');\r\n            const action = this.helpers.getUrlParameter('a');\r\n \r\n            if (userName) {\r\n                this.state.userName = userName;\r\n                sessionStorage.setItem('userName', userName);\r\n            }\r\n \r\n            window.history.replaceState(null, null, '/');\r\n\r\n            if (!this.state.userName) {\r\n                return login;\r\n            }\r\n            \r\n            if (action) {\r\n                return account;\r\n            }\r\n\r\n            return home;\r\n        }\r\n\r\n        config.mapUnknownRoutes(handleUnknownRoutes)\r\n        this.router = router;\r\n    }\r\n\r\n    attached() {\r\n        this.ea.subscribe(ConnectionStateChanged, e => {\r\n            this.setIsConnected();\r\n        });\r\n        this.setIsConnected();\r\n    }\r\n\r\n    logoff() {\r\n        this.router.navigateToRoute('login');\r\n    }\r\n\r\n    manage() {\r\n        this.router.navigateToRoute('account');\r\n    }\r\n\r\n    home() {\r\n        if (this.isConnected) {\r\n            this.router.navigateToRoute('home');\r\n        } else {\r\n            this.router.navigateToRoute('login');\r\n        }\r\n    }\r\n\r\n    private setIsConnected() {\r\n        this.isConnected = this.state.userName !== undefined \r\n            && this.state.userName != null\r\n            && this.router.currentInstruction.config.moduleId != 'pages/confirm';\r\n\r\n        this.userName = this.state.userName;\r\n    }\r\n\r\n}\r\n\r\n@autoinject\r\nclass AuthorizeStep {\r\n\r\n    constructor(private state: State, private helpers: Helpers) { }\r\n\r\n    run(navigationInstruction: NavigationInstruction, next: Next): Promise<any> {\r\n        if (navigationInstruction.getAllInstructions().some(i => {\r\n            let route = i.config as CustomRouteConfig;\r\n            return !route.anomymous;\r\n        })) {            \r\n            let isLoggedIn = this.state.userName;\r\n            if (!isLoggedIn) {\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        return next();\r\n    }\r\n}","import { Aurelia, LogManager } from 'aurelia-framework'\r\nimport {ConsoleAppender} from 'aurelia-logging-console';\r\nimport environment from './environment';\r\n\r\nif (environment.debug) {\r\n    LogManager.addAppender(new ConsoleAppender());\r\n    LogManager.setLevel(LogManager.logLevel.debug);\r\n}\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\n(<any>Promise).config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources')\r\n    .plugin('aurelia-validation');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import { HttpClient } from 'aurelia-http-client';\r\nimport { autoinject } from 'aurelia-framework';\r\n\r\nimport { Settings } from '../config/settings';\r\nimport { State } from './state'\r\n\r\nimport { User } from '../model/user';\r\n\r\n@autoinject\r\nexport class UserService {\r\n\r\n    constructor(private http: HttpClient, \r\n        private settings: Settings,\r\n        private state: State) { }\r\n\r\n    getUsers(): Promise<User[]> {\r\n        return new Promise<User[]>((resolve, reject) => {\r\n            this.http.get(this.settings.userAPI)\r\n                .then(response => {\r\n                        var data = response.content;\r\n                        if (data && data.users) {\r\n                            resolve(<User[]>data.users);\r\n                        }\r\n                    })\r\n                .catch(error => reject(new Error('the service is down')));\r\n        });\r\n    }\r\n}","import { autoinject } from 'aurelia-framework';\r\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\r\n\r\nimport { ConnectionState } from '../services/chat.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { ChatService } from '../services/chat.service';\r\n\r\nimport { User } from '../model/user';\r\nimport { UserConnected } from '../events/userConnected'\r\nimport { UserDisconnected } from '../events/userDisconnected'\r\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\r\n\r\n@autoinject\r\nexport class ContactList {\r\n    users: User[];\r\n    loadingMessage = \"loading...\";\r\n    private userConnectedSubscription: Subscription;\r\n    private userDisconnectedSubscription: Subscription;\r\n    private connectionStateChangeSubscription: Subscription;\r\n\r\n    constructor(private userService: UserService,\r\n        private chatService: ChatService,\r\n        private ea: EventAggregator) { }\r\n\r\n    attached() {\r\n        this.connectionStateChangeSubscription = this.ea.subscribe(ConnectionStateChanged, e => {\r\n            if ((<ConnectionStateChanged>e).state === ConnectionState.Connected) {\r\n                this.getUser();\r\n            }            \r\n        });\r\n\r\n        if (this.chatService.currentState === ConnectionState.Connected) {\r\n            this.getUser();\r\n        }        \r\n    }\r\n\r\n    detached() {\r\n        this.connectionStateChangeSubscription.dispose();\r\n        if (this.userConnectedSubscription) {\r\n            this.userConnectedSubscription.dispose();\r\n        }\r\n        if (this.userDisconnectedSubscription) {\r\n            this.userDisconnectedSubscription.dispose();\r\n        }\r\n    }\r\n\r\n    private getUser() {\r\n        this.userService.getUsers()\r\n            .then(users => {\r\n                this.users = users;\r\n\r\n                this.userConnectedSubscription = this.ea.subscribe(UserConnected, e => {\r\n                    let userConnected = <UserConnected>e;\r\n                    this.removeUser(userConnected.user.id);\r\n                    this.users.unshift(userConnected.user);\r\n                });\r\n\r\n                this.userDisconnectedSubscription = this.ea.subscribe(UserDisconnected, e => {\r\n                    this.removeUser((<UserDisconnected>e).user.id);\r\n                });\r\n            })\r\n            .catch((error:Error) => this.loadingMessage = error.message);\r\n    }\r\n\r\n    private removeUser(id: string) {\r\n        let user: User;\r\n        this.users.forEach(u => {\r\n            if (u.id === id) {\r\n                user = u;\r\n            }\r\n        });\r\n\r\n        if (user) {\r\n            let index = this.users.indexOf(user);\r\n            this.users.splice(index, 1);\r\n        }        \r\n    }\r\n}","import { Conversation } from '../model/conversation';\r\n\r\nexport class ConversationSelected {\r\n    constructor(public conversation: Conversation) { }\r\n}","import { Router } from 'aurelia-router';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport { autoinject } from 'aurelia-framework';\r\n\r\nimport { Settings } from '../config/settings';\r\nimport { State } from './state'\r\nimport { Helpers } from './helpers'\r\n\r\nimport { Message } from '../model/message';\r\nimport { Conversation } from '../model/conversation';\r\nimport { Attendee } from '../model/attendee';\r\n\r\nimport { ConversationSelected } from '../events/conversationSelected';\r\nimport { ConversationJoined } from '../events/conversationJoined';\r\n\r\n@autoinject\r\nexport class ConversationService {\r\n    currentConversation: Conversation;\r\n\r\n    constructor(private http: HttpClient,\r\n        private settings: Settings,\r\n        private state: State,\r\n        private helpers: Helpers,\r\n        private ea: EventAggregator) { }\r\n\r\n    showConversation(conversation: Conversation, router: Router) {\r\n        if (router.currentInstruction.fragment !== 'conversation/' + conversation.title) {\r\n            this.currentConversation = conversation;\r\n            this.helpers.setConverationTitle(conversation);\r\n            this.ea.publish(new ConversationSelected(conversation));\r\n            router.navigateToRoute('conversation', { id: conversation.title });\r\n        }        \r\n    }\r\n\r\n    sendMessage(conversation: Conversation, message: string): Promise<Message> {\r\n        let m = new Message();\r\n        m.conversationId = conversation.id;\r\n        m.from = this.state.userName;\r\n        m.text = message;\r\n\r\n        if (conversation.id) {\r\n            return new Promise<Message>((resolve, reject) => {\r\n                this.http.post(this.settings.chatAPI, {\r\n                    to: conversation.id,\r\n                    text: message\r\n                })\r\n                    .then(response => {\r\n                        conversation.messages.unshift(m);\r\n                        resolve(m);\r\n                    })\r\n                    .catch(error => reject(this.helpers.getError(error)));\r\n            });\r\n        } else {\r\n            let attendee: Attendee;\r\n            conversation.attendees.forEach(a => {\r\n                if (a.userId !== this.state.userName) {\r\n                    attendee = a;\r\n                }\r\n            });\r\n\r\n            return new Promise<Message>((resolve, reject) => {\r\n                this.http.post(this.settings.convAPI, {\r\n                    to: attendee.userId,\r\n                    text: message\r\n                })\r\n                    .then(\r\n                    response => {\r\n                        conversation.id = response.content;\r\n                        this.ea.publish(new ConversationJoined(conversation));\r\n                        conversation.messages.unshift(m);\r\n                        resolve(m);\r\n                    })\r\n                    .catch(error => reject(this.helpers.getError(error)));\r\n            });\r\n        }\r\n    }\r\n\r\n    getConversations(): Promise<Conversation[]> {\r\n        return new Promise<Conversation[]>((resolve, reject) => {\r\n            this.http.get(this.settings.chatAPI)\r\n                .then(response => {\r\n                    if (response.response) {\r\n                        let data = response.content;\r\n                        if (data) {\r\n                            let conversations = <Conversation[]>data;\r\n                            conversations.forEach(c => this.helpers.setConverationTitle(c)); \r\n                            resolve(conversations);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    resolve(null);\r\n                })\r\n                .catch(error => reject(new Error('The service is down')));\r\n        });\r\n    }\r\n}","import { bindable, autoinject } from 'aurelia-framework';\r\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router';\r\n\r\nimport { ConversationService } from '../services/conversation.service';\r\nimport { State } from '../services/state';\r\nimport { User } from '../model/user';\r\nimport { Conversation } from '../model/conversation';\r\nimport { Attendee } from '../model/attendee';\r\nimport { Message } from '../model/message';\r\nimport { ConversationSelected } from '../events/conversationSelected';\r\n\r\n@autoinject\r\nexport class Contact {\r\n    @bindable user: User;\r\n    isSelected: boolean;\r\n    private conversationSelectedSubscription: Subscription;\r\n\r\n    constructor(private service: ConversationService, \r\n        private state: State,\r\n        private ea: EventAggregator, \r\n        private router: Router) { }\r\n\r\n    get isCurrentUser() {\r\n        return this.state.userName === this.user.id; \r\n    }\r\n\r\n    select() {\r\n        if (this.isCurrentUser) {\r\n            return;\r\n        }\r\n\r\n        if (!this.user.conversation) {\r\n            this.user.conversation = new Conversation(this.user);\r\n        }\r\n\r\n        this.service.showConversation(this.user.conversation, this.router);        \r\n    }\r\n\r\n    attached() {\r\n        this.conversationSelectedSubscription = this.ea.subscribe(ConversationSelected, e => {\r\n            let conv = e.conversation as Conversation;\r\n            let attendees = conv.attendees;\r\n\r\n            this.isSelected = false;\r\n            if (attendees.length < 3) {\r\n                attendees.forEach(a => {\r\n                    if (a.userId !== this.state.userName && a.userId === this.user.id) {\r\n                        this.isSelected = true;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    detached() {\r\n        this.conversationSelectedSubscription.dispose();\r\n    }\r\n}\r\n\r\n","import { autoinject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\nimport { ConversationService } from '../services/conversation.service';\r\nimport { Conversation } from '../model/conversation';\r\n\r\n@autoinject\r\nexport class ConversationComponent {\r\n    conversation: Conversation;\r\n    message: string;\r\n    error: string;\r\n\r\n    constructor(private service: ConversationService, private router: Router) {\r\n    }\r\n\r\n    activate(params, routeConfig) {\r\n        this.error = '';\r\n\r\n        if (!params) {\r\n            this.service.currentConversation = undefined;\r\n        }\r\n\r\n        this.conversation = this.service.currentConversation;\r\n\r\n        if (!this.conversation) {\r\n            this.router.navigateToRoute('home');\r\n        } else {\r\n            routeConfig.navModel.setTitle(this.conversation.title);\r\n        }\r\n    }\r\n\r\n    sendMessage() {\r\n        if (this.service.currentConversation === this.conversation) {\r\n            this.service.sendMessage(this.conversation, this.message);            \r\n        } else {\r\n            this.error = 'this user is disconnected';\r\n        }\r\n\r\n        this.message = '';\r\n    }\r\n}\r\n\r\n","import { Message } from '../model/message';\r\n\r\nexport class NotificationClicked {\r\n    constructor(public message: Message) { }\r\n}","import { autoinject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\r\n\r\nimport { ConnectionState, Disconnected } from '../services/chat.service';\r\nimport { ConversationService } from '../services/conversation.service';\r\nimport { State } from '../services/state';\r\n\r\nimport { Conversation } from '../model/conversation';\r\nimport { ConversationJoined } from '../events/conversationJoined';\r\nimport { UserDisconnected } from '../events/userDisconnected';\r\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\r\nimport { NotificationClicked } from '../events/notificationClicked';\r\n\r\n@autoinject\r\nexport class ConversationList {\r\n  conversations: Conversation[];\r\n  private conversationJoinedSubscription: Subscription;\r\n  private userDisconnectedSubscription: Subscription;\r\n  private connectionStateSubscription: Subscription;\r\n  private notificationClickedSubscription: Subscription;\r\n\r\n  constructor(private service: ConversationService,\r\n    private state: State,\r\n    private ea: EventAggregator,\r\n    private router: Router) { }\r\n\r\n  attached() {\r\n    this.conversations = new Array<Conversation>();\r\n\r\n    this.getConversations();\r\n\r\n    this.connectionStateSubscription = this.ea.subscribe(ConnectionStateChanged, e => {\r\n      let state = (<ConnectionStateChanged>e).state;\r\n      if (state === ConnectionState.Disconnected) {\r\n        // remove conversation on log off, disconnection\r\n        this.conversations.splice(this.conversations.length);\r\n      } else if (state === ConnectionState.Connected) {\r\n        // get conversation for reconnect\r\n        this.getConversations();\r\n      }\r\n    });\r\n\r\n    this.notificationClickedSubscription = this.ea.subscribe(NotificationClicked, e => {\r\n      const message = (<NotificationClicked>e).message;\r\n      const conversation = this.conversations.find(c => c.id === message.conversationId);\r\n      if (conversation) {\r\n        this.service.showConversation(conversation, this.router);\r\n      }\r\n    });\r\n  }\r\n\r\n  detached() {\r\n    this.Unsubscribe();\r\n    this.connectionStateSubscription.dispose();\r\n  }\r\n\r\n  private Unsubscribe() {\r\n    if (this.conversationJoinedSubscription) {\r\n      this.conversationJoinedSubscription.dispose();\r\n    }\r\n    if (this.userDisconnectedSubscription) {\r\n      this.userDisconnectedSubscription.dispose();\r\n    }\r\n  }\r\n\r\n  private getConversations() {\r\n    this.service.getConversations()\r\n      .then(conversations => {\r\n        // Unsubscribe before in case of connection state changed to connected\r\n        this.Unsubscribe();\r\n\r\n        if (!conversations) {\r\n          return;\r\n        }\r\n        this.conversations = conversations;\r\n\r\n        this.userDisconnectedSubscription = this.ea.subscribe(UserDisconnected, e => {\r\n          this.conversations.forEach(c => {\r\n            let attendees = c.attendees;\r\n\r\n            attendees.forEach(a => {\r\n              let user = (<UserDisconnected>e).user;\r\n              if (user.isRemoved && a.userId === user.id) {\r\n\r\n                if (c.attendees.length < 3) {\r\n                  const index = this.conversations.indexOf(c);\r\n                  this.conversations.splice(index, 1);\r\n\r\n                  if (this.service.currentConversation === c) {\r\n                    this.service.currentConversation = undefined;\r\n                  }\r\n                } else {\r\n                  const index = attendees.indexOf(a);\r\n                  attendees.splice(index, 1);\r\n\r\n                  if (this.service.currentConversation === c) {\r\n                    c.title = undefined;\r\n                    this.service.showConversation(c, this.router);\r\n                  }                   \r\n                }\r\n              }\r\n            });\r\n          });\r\n        });\r\n\r\n        this.conversationJoinedSubscription = this.ea.subscribe(ConversationJoined, e => {\r\n          const conversation = (<ConversationJoined>e).conversation;\r\n          this.conversations.unshift(e.conversation);\r\n        });\r\n      });\r\n  }\r\n}","import { bindable, autoinject } from 'aurelia-framework';\r\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router';\r\n\r\nimport { ConversationService } from '../services/conversation.service';\r\nimport { Conversation } from '../model/conversation';\r\nimport { Message } from '../model/message';\r\nimport { ConversationSelected } from '../events/conversationSelected';\r\nimport { MessageReceived } from '../events/messageReceived';\r\n\r\n@autoinject\r\nexport class ConversationPreview {\r\n    @bindable conversation: Conversation;\r\n    isSelected: boolean;\r\n    lastMessage: string;\r\n    \r\n    private conversationSelectedSubscription: Subscription;\r\n    private messageReceivedSubscription: Subscription;\r\n\r\n    constructor(private service: ConversationService, private ea: EventAggregator, private router: Router) { }\r\n\r\n    select() {\r\n        this.service.showConversation(this.conversation, this.router);\r\n    }\r\n\r\n    attached() {\r\n        this.lastMessage = this.conversation.messages[0].text;\r\n        this.isSelected = this.conversation && this.conversation.isInitiatedByUser;\r\n\r\n        this.conversationSelectedSubscription = this.ea.subscribe(ConversationSelected, e => {\r\n            if (e.conversation.id === this.conversation.id) {\r\n                this.isSelected = true;\r\n            } else {\r\n                this.isSelected = false;\r\n            }\r\n        });\r\n        \r\n        this.messageReceivedSubscription = this.ea.subscribe(MessageReceived, e => {\r\n            let message = (<MessageReceived>e).message;\r\n            if (message.conversationId === this.conversation.id) {                \r\n                this.conversation.messages.unshift(message);\r\n                this.lastMessage = message.text;\r\n            }\r\n        });\r\n    }\r\n\r\n    detached() {\r\n        this.conversationSelectedSubscription.dispose();\r\n        this.messageReceivedSubscription.dispose();\r\n    }\r\n}","export class Provider {\r\n    displayName: string;\r\n    authenticationScheme: string;\r\n}","import { HttpClient, HttpResponseMessage } from 'aurelia-http-client';\r\nimport { autoinject } from 'aurelia-framework';\r\n\r\nimport { Settings } from '../config/settings';\r\nimport { ChatService } from './chat.service';\r\nimport { ConversationService } from './conversation.service';\r\nimport { Helpers } from './helpers';\r\nimport { State } from './state';\r\nimport { Provider } from '../model/provider'\r\n\r\n@autoinject\r\nexport class LoginService {\r\n    private xhrf: string;\r\n\r\n    constructor(private http: HttpClient,\r\n        private settings: Settings,\r\n        private chatService: ChatService,\r\n        private conversationService: ConversationService,\r\n        private state: State,\r\n        private helpers: Helpers) { }\r\n\r\n    getXhrf(clearCookies?: Boolean): Promise<string> {\r\n        return new Promise<string>((resolve, reject) => {\r\n            if (clearCookies) {\r\n                this.http.get('cls')\r\n                    .then(() => this.setXhrf(resolve, reject))\r\n                    .catch(e => reject(new Error('the service is down')));\r\n            } else if (this.xhrf) {\r\n                resolve(this.xhrf);\r\n            } else {\r\n                this.setXhrf(resolve, reject);\r\n            }\r\n        });\r\n    }\r\n\r\n    login(userName: string): Promise<string> {\r\n        this.state.isGuess = true;\r\n\r\n        return new Promise<string>((resolve, reject) => {\r\n            this.getXhrf()\r\n                .then(r => {\r\n                    if (this.state.isGuess) {\r\n                        this.loginAsGuess(userName, resolve, reject);\r\n                    }\r\n                })\r\n                .catch(error => reject(error));\r\n        });\r\n    }\r\n\r\n    logoff() {\r\n        if (!this.state.userName) {\r\n            return;\r\n        }\r\n        \r\n        this.state.userName = undefined;\r\n        this.conversationService.currentConversation = undefined;\r\n\r\n        this.chatService.stop();\r\n\r\n        this.getXhrf()\r\n            .then(r => { \r\n                this.http.post(this.settings.accountdAPI + '/spalogoff', null);                \r\n            });\r\n\r\n        this.xhrf = undefined;\r\n    }\r\n\r\n    exists(userName): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            if (!userName) {\r\n                resolve(false);\r\n                return;\r\n            }\r\n\r\n            this.getXhrf()\r\n                .then(r => {\r\n                    this.http.get(this.settings.accountdAPI + \"/exists?userName=\" + encodeURIComponent(userName))\r\n                        .then(response => {\r\n                            resolve(response.content);\r\n                        })\r\n                        .catch(error => {\r\n                            this.manageError(error, reject, new Error('the service is down'));\r\n                        });\r\n                })\r\n                .catch(error => reject(new Error('the service is down')));\r\n        });\r\n    }\r\n\r\n    confirm(userName): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            this.getXhrf()\r\n                .then(r => {\r\n                    this.http.put(this.settings.accountdAPI + \"/spaExternalLoginConfirmation\", { userName: userName })\r\n                        .then(response => {\r\n                            this.logged(userName, resolve, reject);\r\n                            sessionStorage.setItem('userName', userName);\r\n                        })\r\n                        .catch(error => this.manageError(error, reject, this.helpers.getError(error)));\r\n                })\r\n                .catch(error => reject(new Error('the service is down')));\r\n        });\r\n    }\r\n\r\n    getExternalLoginProviders(): Promise<Array<Provider>> {\r\n        return new Promise<Array<Provider>>((resolve, reject) => {\r\n            this.getXhrf()\r\n                .then(r => {\r\n                    this.http.get(this.settings.accountdAPI + \"/getExternalProviders\")\r\n                        .then(response => {\r\n                            resolve(response.content as Array<Provider>);\r\n                        })\r\n                        .catch(error => this.manageError(error, reject, this.helpers.getError(error)));\r\n                })\r\n                .catch(error => reject(new Error('the service is down')));\r\n        });\r\n    }\r\n\r\n    private setXhrf(resolve: Function, reject: Function) {\r\n        this.http.get('xhrf')\r\n            .then(r => {\r\n                this.xhrf = r.response\r\n                this.http.configure(builder => {\r\n                    builder.withHeader('X-XSRF-TOKEN', this.xhrf);\r\n                });\r\n                resolve(this.xhrf);\r\n            })\r\n            .catch(error => reject(new Error('the service is down')));\r\n    }\r\n\r\n    private loginAsGuess(userName, resolve: Function, reject: Function) {\r\n        this.http.post(this.settings.accountdAPI + '/spaguess', { userName: userName })\r\n            .then(response => {\r\n                this.logged(userName, resolve, reject);\r\n            })\r\n            .catch(error => {\r\n                this.manageError(error, reject, this.helpers.getError(error));\r\n            });\r\n    }\r\n\r\n    private logged(userName: string, resolve: Function, reject: Function) {\r\n        this.state.userName = userName;\r\n        // get a new token for the session lifecycle\r\n        this.setXhrf(resolve, reject);\r\n    }\r\n\r\n    private manageError(error: HttpResponseMessage, reject: Function, exception: Error) {\r\n        this.xhrf = undefined;\r\n        reject(exception);        \r\n    }\r\n}","import { customElement, autoinject, bindable, bindingMode } from 'aurelia-framework';\r\nimport { ValidationControllerFactory, ValidationController, ValidationRules } from 'aurelia-validation';\r\n\r\nimport { LoginService } from '../services/login.service';\r\nimport { State } from '../services/state';\r\n\r\n@autoinject\r\n@customElement('user-name')\r\nexport class UserName {\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay })\r\n    userName: string;\r\n    controller: ValidationController;\r\n\r\n    constructor(private service: LoginService, private state: State, controllerFactory: ValidationControllerFactory) {\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.controller.validateTrigger = 'change';\r\n    }\r\n\r\n    attached() {\r\n        this.userName = this.state.userName;\r\n    }\r\n\r\n    userNameAvailable(value: string) {\r\n        return new Promise<boolean>(resolve => {\r\n            this.service.exists(value)\r\n                .then(r => {\r\n                    resolve(!r)\r\n                    this.state.userName = value;\r\n                });\r\n        })\r\n    }\r\n}\r\n\r\nValidationRules\r\n    .ensure((c: UserName) => c.userName)\r\n    .satisfies((value, obj) => obj.userNameAvailable(value))\r\n    .withMessage('This user name already exists, please choose another one')\r\n    .satisfiesRule('required')\r\n    .on(UserName);\r\n","import { ValidationRules } from 'aurelia-validation';\r\n\r\nexport class ChangePassword {\r\n    oldPassword: string;\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n}\r\n","class UserLoginInfo {\r\n    loginProvider: string;\r\n    providerKey: string;\r\n}\r\n\r\nexport class UserLogiAuthenticationDescriptionnInfo {\r\n    authenticationScheme: string;\r\n    displayName: string;\r\n}\r\n\r\nexport class ManageLogins {\r\n    currentLogins: Array<UserLoginInfo>;\r\n    otherLogins: Array<UserLogiAuthenticationDescriptionnInfo>;    \r\n}","import { HttpClient } from 'aurelia-http-client';\r\nimport { autoinject } from 'aurelia-framework';\r\n\r\nimport { Settings } from '../config/settings';\r\nimport { State } from './state';\r\nimport { Helpers } from './helpers';\r\nimport { ManageLogins } from '../model/manage-logins'\r\n\r\nimport { ChangePassword } from '../model/changePassword';\r\n\r\n@autoinject\r\nexport class AccountService {\r\n\r\n    constructor(private http: HttpClient, \r\n        private settings: Settings,\r\n        private state: State,\r\n        private helpers: Helpers) { }\r\n\r\n    getLogins(): Promise<ManageLogins> {\r\n        return new Promise<ManageLogins>((resove, reject) => {\r\n            this.http.get(this.settings.accountdAPI + '/logins')\r\n                .then(response => {                    \r\n                    resove(response.content as ManageLogins);\r\n                })\r\n                .catch(error => reject(new Error('The service is down')));\r\n        });\r\n    }\r\n\r\n    removeLogin(loginProvider: string, providerKey: string): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.http.delete(this.settings.accountdAPI + '/sparemoveLogin?loginProvider=' + encodeURIComponent(loginProvider) + '&providerKey=' + encodeURIComponent(providerKey))\r\n                .then(() => {\r\n                    resolve();\r\n                })\r\n                .catch(e => reject(this.helpers.getError(e)));\r\n        });\r\n    }\r\n}","import { autoinject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\r\n\r\nimport { ConnectionState } from '../services/chat.service';\r\nimport { State } from '../services/state';\r\nimport { AccountService } from '../services/account.service';\r\nimport { LoginService } from '../services/login.service';\r\nimport { ChangePassword } from '../model/changePassword';\r\nimport { ManageLogins, UserLogiAuthenticationDescriptionnInfo } from '../model/manage-logins';\r\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\r\nimport { Settings } from '../config/settings';\r\nimport { Helpers } from '../services/helpers';\r\n\r\n@autoinject\r\nexport class Account {\r\n    errorMessage: string;\r\n    logins: ManageLogins;\r\n    externalLinkLogin: string;\r\n    token: string;\r\n\r\n    private connectionStateSubscription: Subscription;\r\n\r\n    constructor(private accountService: AccountService, \r\n            private loginService: LoginService,\r\n            private router: Router, \r\n            private ea: EventAggregator,\r\n            private state: State,\r\n            settings: Settings,\r\n            helpers: Helpers) {          \r\n        this.externalLinkLogin = settings.apiBaseUrl + \r\n            settings.accountdAPI + \r\n            '/linklogin?returnUrl=' + \r\n            encodeURIComponent(location.protocol + '//' + location.host + '?a=account&u=' + encodeURIComponent(this.state.userName));\r\n    }\r\n\r\n    remove(loginProvider: string, providerKey: string) {\r\n        this.accountService.removeLogin(loginProvider, providerKey)\r\n            .then(() => {\r\n                let currentLogins = this.logins.currentLogins;\r\n                const index = currentLogins.findIndex(value => value.loginProvider === loginProvider && value.providerKey === providerKey);\r\n                currentLogins.splice(index, 1);\r\n\r\n                const provider = new UserLogiAuthenticationDescriptionnInfo();\r\n                provider.authenticationScheme = provider.displayName = loginProvider;\r\n                this.logins.otherLogins.push(provider)\r\n            })\r\n            .catch((e: Error) => this.errorMessage = e.message);\r\n    }\r\n\r\n    attached() {\r\n        this.connectionStateSubscription = this.ea.subscribe(ConnectionStateChanged, e => {\r\n            if ((<ConnectionStateChanged>e).state === ConnectionState.Connected) {\r\n                this.getLogins();\r\n            }\r\n        });\r\n        \r\n        this.getLogins();\r\n    }\r\n\r\n    detached() {\r\n        this.connectionStateSubscription.dispose();\r\n    }\r\n\r\n    private getLogins() {\r\n        this.loginService.getXhrf()            \r\n            .then((token: string) => {\r\n                    this.token = token;\r\n                    this.accountService.getLogins()\r\n                        .then((logins: ManageLogins) => this.logins = logins)\r\n                        .catch((e: Error) => this.errorMessage = e.message);\r\n                })\r\n            .catch((e: Error) => this.errorMessage = e.message);\r\n    }\r\n}\r\n","import { autoinject } from 'aurelia-framework';\r\nimport { Router, NavigationInstruction } from 'aurelia-router';\r\nimport { ValidationControllerFactory, ValidationController, ValidationRules } from 'aurelia-validation';\r\n\r\nimport { LoginService } from '../services/login.service';\r\nimport { Helpers } from '../services/helpers';\r\nimport { State } from '../services/state';\r\n\r\n@autoinject\r\nexport class Confirm {\r\n    error: Error;\r\n    controller: ValidationController;\r\n    provider: string;\r\n\r\n    constructor(private service: LoginService,\r\n        private router: Router,\r\n        private helpers: Helpers,\r\n        private state: State,\r\n        controllerFactory: ValidationControllerFactory) {\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.provider = this.helpers.getUrlParameter('p');\r\n        state.userName = this.helpers.getUrlParameter('u');\r\n\r\n        window.history.replaceState(null, null, '/');\r\n    }\r\n\r\n    confirm() {\r\n        this.controller.validate()\r\n            .then(() => {\r\n                this.service.confirm(this.state.userName)\r\n                    .then(() => {\r\n                        this.router.navigateToRoute('home');\r\n                    })\r\n                    .catch((e: Error) => {\r\n                        if (e.name === 'NullInfo') {\r\n                            this.router.navigateToRoute('login');\r\n                        } else {\r\n                            this.error = e;\r\n                        }\r\n                    });\r\n            })\r\n            .catch(e => this.error = e);\r\n    }\r\n}\r\n","import { EventAggregator, Subscription } from 'aurelia-event-aggregator';\r\n\r\nimport { Message } from '../model/message';\r\nimport { Conversation } from '../model/conversation';\r\nimport { MessageReceived } from '../events/messageReceived';\r\nimport { ConversationJoined } from '../events/conversationJoined';\r\nimport { NotificationClicked } from '../events/notificationClicked';\r\n\r\ninterface NotificationOptions {\r\n    dir?: string;\r\n    lang?: string;\r\n    body?: string;\r\n    tag?: string;\r\n    icon?: string;\r\n    data?: any;\r\n    vibrate?: number[];\r\n    renotify?: boolean;\r\n    silent?: boolean;\r\n    sound?: string;\r\n    noscreen?: boolean;\r\n    sticky?: boolean;\r\n}\r\n\r\ninterface Notification {\r\n    readonly title: string;\r\n    readonly dir: string;\r\n    readonly lang: string;\r\n    readonly body: string;\r\n    readonly tag: string;\r\n    readonly icon: string;\r\n    readonly data: any;\r\n    readonly silent: boolean;\r\n    readonly timestamp: string;\r\n    readonly noscreen: boolean;\r\n    readonly renotify: boolean;\r\n    readonly sound: string;\r\n    readonly sticky: boolean;\r\n    readonly vibrate: number[];\r\n    onclick: Function;\r\n    onerror: Function;\r\n    close(): void;\r\n}\r\n\r\ndeclare var Notification: {\r\n    prototype: Notification;\r\n    readonly permission: string;\r\n    new(title: string, options?: NotificationOptions): Notification;\r\n    requestPermission(): Promise<string>;\r\n}\r\n\r\nexport class NotificationService {\r\n    private messageSubscription: Subscription;\r\n    private conversationSubscription: Subscription;\r\n\r\n    constructor(private ea: EventAggregator) { }\r\n\r\n    start() {\r\n        if (window['Notification']) {\r\n            if (Notification.permission === 'granted') {\r\n                this.listen();\r\n            } else if (Notification.permission !== 'denied') {\r\n                Notification\r\n                    .requestPermission()\r\n                    .then(permission => {\r\n                        if (permission === 'granted') {\r\n                            this.listen();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        if(this.messageSubscription) {\r\n            this.messageSubscription.dispose();\r\n        }\r\n        if(this.conversationSubscription) {\r\n            this.conversationSubscription.dispose();\r\n        }\r\n    }\r\n\r\n    private listen() {\r\n        this.messageSubscription = this.ea.subscribe(MessageReceived, e => {\r\n            this.notify((<MessageReceived>e).message);\r\n        });\r\n\r\n        this.conversationSubscription = this.ea.subscribe(ConversationJoined, e => {\r\n            const conversation = (<ConversationJoined>e).conversation;\r\n            const message = conversation.messages[0];\r\n            if (message) {\r\n                this.notify(message);\r\n            }\r\n        });\r\n    }\r\n\r\n    private notify(message: Message) {\r\n        const option = {\r\n                body: message.text,\r\n                icon: \"favicon.ico\"\r\n            };\r\n\r\n        const n = new Notification(message.from, option);\r\n            n.onclick = () => {\r\n                this.ea.publish(new NotificationClicked(message));\r\n                n.close.bind(n);\r\n            };\r\n        \r\n        setTimeout(n.close.bind(n), 5000);\r\n    }\r\n}","import { autoinject } from 'aurelia-framework';\r\nimport { Router, RouterConfiguration } from 'aurelia-router';\r\nimport { EventAggregator, Subscription } from 'aurelia-event-aggregator';\r\n\r\nimport { ChatService, ConnectionState } from '../services/chat.service';\r\nimport { LoginService } from '../services/login.service';\r\nimport { NotificationService } from '../services/notification.service';\r\nimport { ConnectionStateChanged } from '../events/connectionStateChanged';\r\n\r\n@autoinject\r\nexport class Home {\r\n    router: Router;\r\n    isDisconnected: boolean;\r\n\r\n    private connectionStateSubscription: Subscription;\r\n    private showConversationSubscription: Subscription;\r\n    private notification: NotificationService;\r\n\r\n    constructor(private chatService: ChatService,\r\n        private ea: EventAggregator) { \r\n            this.notification = new NotificationService(ea);\r\n        }\r\n\r\n    configureRouter(config: RouterConfiguration, router: Router) {\r\n        config.map([\r\n            { route: ['', 'conversation/:id'], name: 'conversation', moduleId: '../components/conversation-component' }\r\n        ]);\r\n\r\n        this.router = router;\r\n    }\r\n\r\n    attached() {\r\n        this.connectionStateSubscription = this.ea.subscribe(ConnectionStateChanged, e => {\r\n            this.setIsDisconnected((<ConnectionStateChanged>e).state);\r\n        });\r\n\r\n        this.setIsDisconnected(this.chatService.currentState);\r\n\r\n        if (this.chatService.currentState !== ConnectionState.Connected) {\r\n            this.chatService.start();\r\n        }\r\n    }\r\n\r\n    detached() {\r\n        this.connectionStateSubscription.dispose();\r\n    }\r\n\r\n    private setIsDisconnected(state: ConnectionState) {\r\n        if (state === ConnectionState.Error) {\r\n            this.router.navigateToRoute('login');\r\n            this.notification.stop();\r\n        } if (state === ConnectionState.Disconnected) {\r\n            this.isDisconnected = true;\r\n            this.notification.stop();\r\n        } else {\r\n            this.isDisconnected = false;\r\n            this.notification.start();\r\n        }\r\n    }\r\n}","import { autoinject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\nimport { LoginService } from '../services/login.service';\r\nimport { Settings } from '../config/settings';\r\nimport { State } from '../services/state';\r\nimport { Provider } from '../model/provider';\r\nimport environment from '../environment';\r\n\r\n@autoinject\r\nexport class Login {\r\n    error: Error;\r\n    externalLogin: string;\r\n    token: string;\r\n    providers: Array<Provider>;\r\n    \r\n    constructor(private service: LoginService, private router: Router, private state: State, settings: Settings) {\r\n        let location = window.location; \r\n        this.externalLogin = settings.apiBaseUrl + \r\n            settings.accountdAPI + \r\n            '/externalLogin?returnUrl=' + \r\n            encodeURIComponent(location.protocol + '//' + location.host + environment.redirectPath);\r\n    }\r\n\r\n    login() {        \r\n        this.service.login(this.state.userName)\r\n            .then(() => {\r\n                this.router.navigateToRoute('home');\r\n            })\r\n            .catch((error: Error) => {\r\n                this.error = error;\r\n            });\r\n    }\r\n\r\n    activate() {\r\n        this.service.logoff();\r\n        this.service.getXhrf(true)\r\n            .then(t => {\r\n                this.token = t;\r\n                this.service.getExternalLoginProviders()\r\n                    .then(providers => this.providers = providers)\r\n                    .catch(e => this.error = e);\r\n            })\r\n            .catch(e => \r\n                this.error = e);\r\n    }\r\n\r\n    \r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources([]);\r\n}\r\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"..\\..\\src"}